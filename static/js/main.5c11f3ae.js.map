{"version":3,"file":"static/js/main.5c11f3ae.js","mappings":"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","sources":["src/components/ClickArea.jsx","src/components/Buildings.jsx","src/components/Stats.jsx","src/hooks/useGameState.js","src/App.jsx","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Animated, Platform, Dimensions } from 'react-native';\nimport carbonTips from '../data/carbonTips.json';\n\nconst ClickArea = ({ onPress, clickValue, ecoPoints, pointsPerSecond, formatNumber, buildings }) => {\n  // Check if we're running on web\n  const isWeb = Platform.OS === 'web';\n  // Get screen dimensions to calculate responsive sizes\n  const { width, height } = Dimensions.get('window');\n\n  // Use the styles function with isWeb parameter\n  const currentStyles = styles(isWeb);\n  \n  // State for the advertising banner\n  const [currentTipIndex, setCurrentTipIndex] = useState(0);\n  const [isEcoEducationUnlocked, setIsEcoEducationUnlocked] = useState(false);\n  \n  // Check if eco_education is unlocked\n  useEffect(() => {\n    if (buildings) {\n      const ecoEducation = buildings.find(building => building.id === 'eco_education');\n      setIsEcoEducationUnlocked(ecoEducation && ecoEducation.unlocked);\n    }\n  }, [buildings]);\n  \n  // Change the tip every 40 seconds\n  useEffect(() => {\n    if (isEcoEducationUnlocked) {\n      const tipInterval = setInterval(() => {\n        setCurrentTipIndex(prevIndex => (prevIndex + 1) % carbonTips.length);\n      }, 40000);\n      \n      return () => clearInterval(tipInterval);\n    }\n  }, [isEcoEducationUnlocked]);\n\n  const [animations, setAnimations] = useState([]);\n  const [nextId, setNextId] = useState(0);\n\n  // Handle the click action\n  const handlePress = () => {\n    // Call the onPress from props\n    onPress();\n\n    // Create a new animation for visual feedback\n    const newAnim = {\n      id: nextId,\n      position: {\n        x: Math.random() * 80 - 40, // Random position near the click area\n        y: -20 - Math.random() * 30, // Start slightly above the click\n      },\n      opacity: new Animated.Value(1),\n      translateY: new Animated.Value(0),\n      value: `+${Number(clickValue).toFixed(2)}`, // Format to 2 decimal places\n    };\n\n    setNextId(nextId + 1);\n    setAnimations([...animations, newAnim]);\n\n    // Animate the point value floating up and fading\n    Animated.parallel([\n      Animated.timing(newAnim.opacity, {\n        toValue: 0,\n        duration: 1500,\n        useNativeDriver: true,\n      }),\n      Animated.timing(newAnim.translateY, {\n        toValue: -100,\n        duration: 1500,\n        useNativeDriver: true,\n      }),\n    ]).start(() => {\n      // Remove this animation from the array once it's done\n      setAnimations(animations => animations.filter(a => a.id !== newAnim.id));\n    });\n  };\n\n  return (\n    <View style={[\n      currentStyles.container,\n      isWeb && currentStyles.webContainer\n    ]}>\n      {/* Carbon Tips Banner - Only shown when eco_education is unlocked */}\n      {isEcoEducationUnlocked && (\n        <View style={[\n          currentStyles.bannerContainer,\n          isWeb && currentStyles.webBannerContainer\n        ]}>\n          <Text style={[\n            currentStyles.bannerTitle,\n            isWeb && currentStyles.webBannerTitle\n          ]}>💡 Carbon Reduction Tip:</Text>\n          <Text style={[\n            currentStyles.bannerText,\n            isWeb && currentStyles.webBannerText\n          ]}>{carbonTips[currentTipIndex].tip}</Text>\n        </View>\n      )}\n\n      {/* Prominently displayed eco points at the top */}\n      <View style={[\n        currentStyles.pointsDisplay,\n        isWeb && currentStyles.webPointsDisplay\n      ]}>\n        <Text style={[\n          currentStyles.pointsValue,\n          isWeb && currentStyles.webPointsValue\n        ]}>{formatNumber(ecoPoints)}</Text>\n        <Text style={[\n          currentStyles.pointsLabel,\n          isWeb && currentStyles.webPointsLabel\n        ]}>Eco Points</Text>\n      </View>\n\n      {/* Animations for the click effect */}\n      {animations.map(anim => (\n        <Animated.Text\n          key={anim.id}\n          style={[\n            currentStyles.floatingText,\n            {\n              opacity: anim.opacity,\n              transform: [\n                { translateX: anim.position.x },\n                { translateY: anim.translateY },\n              ],\n            },\n          ]}\n        >\n          {anim.value}\n        </Animated.Text>\n      ))}\n\n      {/* Main click button */}\n      <TouchableOpacity\n        style={[\n          currentStyles.clickButton,\n          isWeb && currentStyles.webClickButton\n        ]}\n        onPress={handlePress}\n        activeOpacity={0.7}\n      >\n        <View style={[\n          currentStyles.innerCircle,\n          isWeb && currentStyles.webInnerCircle\n        ]}>\n          <Text style={[\n            currentStyles.buttonText,\n            isWeb && currentStyles.webButtonText\n          ]}>🌍</Text>\n          <Text style={[\n            currentStyles.buttonSubtext,\n            isWeb && currentStyles.webButtonSubtext\n          ]}>Click to help!</Text>\n        </View>\n      </TouchableOpacity>\n\n      {/* Points per second below the earth button */}\n      <View style={[\n        currentStyles.pointsPerSecondContainer,\n        isWeb && currentStyles.webPointsPerSecondContainer\n      ]}>\n        <Text style={[\n          currentStyles.pointsPerSecondValue,\n          isWeb && currentStyles.webPointsPerSecondValue\n        ]}>+{formatNumber(pointsPerSecond)}</Text>\n        <Text style={[\n          currentStyles.pointsPerSecondLabel,\n          isWeb && currentStyles.webPointsPerSecondLabel\n        ]}>points per second</Text>\n      </View>\n    </View>\n  );\n};\n\n// Convert styles to a function that takes isWeb as a parameter and calculates webScale internally\nconst styles = (isWeb) => {\n  const webScale = isWeb ? 1.5 : 1;\n\n  return StyleSheet.create({\n    container: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: 20,\n      paddingTop: 30, // Increased top padding to create more space from header\n      position: 'relative',\n      height: 'auto', // Changed to auto to accommodate the banner\n      minHeight: 340, // Minimum height\n      backgroundColor: '#E8F5E9',\n      borderRadius: 15,\n      marginVertical: 15, // Increased vertical margin\n      marginTop: 20, // Extra margin at the top\n    },\n    webContainer: {\n      width: '80%',\n      maxWidth: 600,\n      height: 'auto',\n      minHeight: 340,\n      marginHorizontal: 'auto',\n    },\n    // New styles for the banner\n    bannerContainer: {\n      width: '100%',\n      backgroundColor: '#2196F3',\n      padding: 10,\n      borderRadius: 10,\n      marginBottom: 15,\n      shadowColor: '#000',\n      shadowOffset: { width: 0, height: 2 },\n      shadowOpacity: 0.2,\n      shadowRadius: 3,\n      elevation: 4,\n    },\n    webBannerContainer: {\n      width: '100%',\n      maxWidth: 550,\n    },\n    bannerTitle: {\n      fontSize: 16,\n      fontWeight: 'bold',\n      color: 'white',\n      marginBottom: 5,\n    },\n    webBannerTitle: {\n      fontSize: 16 * webScale,\n    },\n    bannerText: {\n      fontSize: 14,\n      color: 'white',\n      textAlign: 'center',\n    },\n    webBannerText: {\n      fontSize: 14 * webScale,\n    },\n    pointsDisplay: {\n      alignItems: 'center',\n      marginBottom: 25, // Increased bottom margin\n      backgroundColor: '#4CAF50',\n      paddingVertical: 14, // More vertical padding\n      paddingHorizontal: 35, // More horizontal padding\n      borderRadius: 30,\n      shadowColor: '#000',\n      shadowOffset: { width: 0, height: 4 }, // Stronger shadow\n      shadowOpacity: 0.35, // More opaque shadow\n      shadowRadius: 7, // Larger shadow radius\n      elevation: 10, // Higher elevation for Android\n      borderWidth: 2, // Add border\n      borderColor: '#388E3C', // Border color\n    },\n    webPointsDisplay: {\n      width: '100%',\n      maxWidth: 500,\n    },\n    pointsValue: {\n      fontSize: 38, // Larger font size\n      fontWeight: 'bold',\n      color: 'white',\n      textShadowColor: 'rgba(0, 0, 0, 0.2)', // Add text shadow\n      textShadowOffset: { width: 1, height: 1 },\n      textShadowRadius: 3,\n    },\n    webPointsValue: {\n      fontSize: 38 * webScale,\n    },\n    pointsLabel: {\n      fontSize: 16, // Larger label font\n      color: '#E8F5E9',\n      fontWeight: '600', // Slightly bolder\n      marginTop: 2, // Small space between value and label\n    },\n    webPointsLabel: {\n      fontSize: 16 * webScale,\n    },\n    clickButton: {\n      width: 150,\n      height: 150,\n      borderRadius: 75,\n      backgroundColor: '#4CAF50',\n      justifyContent: 'center',\n      alignItems: 'center',\n      shadowColor: '#000',\n      shadowOffset: { width: 0, height: 4 },\n      shadowOpacity: 0.3,\n      shadowRadius: 5,\n      elevation: 8,\n    },\n    webClickButton: {\n      width: 150 * webScale,\n      height: 150 * webScale,\n      borderRadius: 75 * webScale,\n    },\n    innerCircle: {\n      width: 130,\n      height: 130,\n      borderRadius: 65,\n      backgroundColor: '#81C784',\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderWidth: 3,\n      borderColor: '#388E3C',\n    },\n    webInnerCircle: {\n      width: 130 * webScale,\n      height: 130 * webScale,\n      borderRadius: 65 * webScale,\n    },\n    buttonText: {\n      fontSize: 48,\n      marginBottom: 5,\n    },\n    webButtonText: {\n      fontSize: 48 * webScale,\n    },\n    buttonSubtext: {\n      fontSize: 12,\n      color: '#1B5E20',\n      fontWeight: 'bold',\n    },\n    webButtonSubtext: {\n      fontSize: 12 * webScale,\n    },\n    floatingText: {\n      position: 'absolute',\n      zIndex : 1,\n      fontSize: 30,\n      fontWeight: 'bold',\n      color: '#2f8032',\n    },\n    pointsPerSecondContainer: {\n      marginTop: 15,\n      alignItems: 'center',\n      backgroundColor: '#81C784',\n      paddingVertical: 6,\n      paddingHorizontal: 15,\n      borderRadius: 15,\n    },\n    webPointsPerSecondContainer: {\n      width: '100%',\n      maxWidth: 500,\n    },\n    pointsPerSecondValue: {\n      fontSize: 18,\n      fontWeight: 'bold',\n      color: 'white',\n    },\n    webPointsPerSecondValue: {\n      fontSize: 18 * webScale,\n    },\n    pointsPerSecondLabel: {\n      fontSize: 12,\n      color: '#E8F5E9',\n    },\n    webPointsPerSecondLabel: {\n      fontSize: 12 * webScale,\n    },\n    valueText: {\n      marginTop: 10,\n      fontSize: 16,\n      color: '#1B5E20',\n      fontWeight: '500',\n    },\n    webValueText: {\n      fontSize: 16 * webScale,\n    },\n  });\n};\n\nexport default ClickArea;","import React from 'react';\nimport { View, Text, ScrollView, TouchableOpacity, StyleSheet } from 'react-native';\n\nconst Buildings = ({ buildings, ecoPoints, onPurchase, prestigeBuilding, checkCanPrestige, getPrestigeBonus, getBuildingCost }) => {\n  // Filter buildings to only show unlocked ones\n  const availableBuildings = buildings.filter(building => building.unlocked);\n\n  // Render a single building item\n  const renderBuildingItem = (building) => {\n    // Use the getBuildingCost function provided via props\n    const cost = getBuildingCost(building.id);\n    const canAfford = ecoPoints >= cost;\n    const maxLevel = building.level >= building.maxLevel;\n    const canPrestige = checkCanPrestige && checkCanPrestige(building.id);\n    // Use getPrestigeBonus function to get the consistent 10% value\n    const prestigeBonus = getPrestigeBonus(building.id);\n    const currentPrestigeBonus = building.prestigeLevel > 0 ? (building.prestigeLevel * prestigeBonus * 100).toFixed(0) : 0;\n    \n    return (\n      <TouchableOpacity\n        key={building.id}\n        style={[\n          styles.buildingItem,\n          maxLevel ? styles.maxedBuilding : \n            canAfford ? styles.affordableBuilding : styles.unaffordableBuilding\n        ]}\n        onPress={() => canPrestige ? prestigeBuilding(building.id) : onPurchase(building.id)}\n        disabled={!canAfford && !canPrestige}\n      >\n        <View style={styles.buildingIcon}>\n          <Text style={styles.iconText}>{building.icon}</Text>\n        </View>\n        \n        <View style={styles.buildingInfo}>\n          <View style={styles.buildingHeader}>\n            <Text style={styles.buildingName}>{building.name}</Text>\n            <Text style={styles.buildingLevel}>\n              Lvl {building.level}/{building.maxLevel}\n              {building.prestigeLevel > 0 && <Text style={styles.prestigeLevel}> 🌟{building.prestigeLevel}</Text>}\n            </Text>\n          </View>\n          \n          <Text style={styles.buildingDescription}>{building.description}</Text>\n          \n          {building.prestigeLevel > 0 && (\n            <Text style={styles.prestigeBonus}>Current prestige bonus: +{currentPrestigeBonus}%</Text>\n          )}\n          \n          {canPrestige ? (\n            <View style={styles.prestigeContainer}>\n              <Text style={styles.prestigeText}>\n                Prestige now for +{(prestigeBonus * 100).toFixed(0)}% permanent bonus!\n              </Text>\n              <TouchableOpacity \n                style={styles.prestigeButton}\n                onPress={() => prestigeBuilding(building.id)}\n              >\n                <Text style={styles.prestigeButtonText}>PRESTIGE 🌟</Text>\n              </TouchableOpacity>\n            </View>\n          ) : (\n            <View style={styles.buildingFooter}>\n              <Text style={[\n                styles.costText,\n                maxLevel ? styles.maxedText : \n                  canAfford ? styles.affordableText : styles.unaffordableText\n              ]}>\n                {maxLevel ? 'MAX LEVEL' : `Cost: ${cost} eco points`}\n              </Text>\n              \n              {building.type === 'passive' && (\n                <Text style={styles.effectText}>\n                  +{(building.baseEffect * (building.level + 1) * (1 + (building.prestigeLevel * prestigeBonus || 0))).toFixed(1)} pts/sec\n                </Text>\n              )}\n              \n              {building.type === 'click' && (\n                <Text style={styles.effectText}>\n                  +{(building.baseEffect * (building.level + 1) * (1 + (building.prestigeLevel * prestigeBonus || 0))).toFixed(1)} per click\n                </Text>\n              )}\n              \n              {building.type === 'multiplier' && (\n                <Text style={styles.effectText}>\n                  +{(building.baseEffect * (building.level + 1) * (1 + (building.prestigeLevel * prestigeBonus || 0)) * 100).toFixed(1)}% bonus\n                </Text>\n              )}\n            </View>\n          )}\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Buildings</Text>\n      \n      {availableBuildings.length === 0 ? (\n        <View style={styles.emptyContainer}>\n          <Text style={styles.emptyText}>No buildings available yet! Keep clicking to unlock more.</Text>\n        </View>\n      ) : (\n        <ScrollView style={styles.buildingsList}>\n          {availableBuildings.map(renderBuildingItem)}\n        </ScrollView>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: '#E8F5E9',\n    borderRadius: 10,\n    marginVertical: 10,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#2E7D32',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  buildingsList: {\n    flex: 1,\n  },\n  buildingItem: {\n    flexDirection: 'row',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 10,\n    alignItems: 'center',\n  },\n  affordableBuilding: {\n    backgroundColor: '#C8E6C9',\n    borderWidth: 1,\n    borderColor: '#43A047',\n  },\n  unaffordableBuilding: {\n    backgroundColor: '#DCEDC8',\n    borderWidth: 1,\n    borderColor: '#AED581',\n    opacity: 0.8,\n  },\n  maxedBuilding: {\n    backgroundColor: '#B3E5FC',\n    borderWidth: 1,\n    borderColor: '#29B6F6',\n  },\n  buildingIcon: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: '#FFFFFF',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 3,\n  },\n  iconText: {\n    fontSize: 24,\n  },\n  buildingInfo: {\n    flex: 1,\n  },\n  buildingHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 4,\n  },\n  buildingName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#1B5E20',\n  },\n  buildingLevel: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: '#388E3C',\n  },\n  prestigeLevel: {\n    color: '#FF6F00',\n    fontWeight: 'bold',\n  },\n  buildingDescription: {\n    fontSize: 14,\n    color: '#33691E',\n    marginBottom: 6,\n  },\n  prestigeBonus: {\n    fontSize: 12,\n    color: '#FF6F00',\n    fontWeight: 'bold',\n    marginBottom: 6,\n  },\n  buildingFooter: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  costText: {\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n  affordableText: {\n    color: '#2E7D32',\n  },\n  unaffordableText: {\n    color: '#BF360C',\n  },\n  maxedText: {\n    color: '#0288D1',\n  },\n  effectText: {\n    fontSize: 13,\n    color: '#33691E',\n    fontStyle: 'italic',\n  },\n  emptyContainer: {\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#689F38',\n    textAlign: 'center',\n  },\n  prestigeContainer: {\n    marginTop: 5,\n    backgroundColor: '#FFF3E0',\n    padding: 8,\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: '#FFB74D',\n  },\n  prestigeText: {\n    fontSize: 13,\n    color: '#E65100',\n    marginBottom: 5,\n    textAlign: 'center',\n  },\n  prestigeButton: {\n    backgroundColor: '#FF9800',\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    borderRadius: 4,\n    alignSelf: 'center',\n  },\n  prestigeButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 14,\n  },\n});\n\nexport default Buildings;","import React from 'react';\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\n\nconst Stats = ({ stats, resources, pointsPerSecond, achievements }) => {\n  // Filter to only show unlocked achievements\n  const unlockedAchievements = achievements.filter(achievement => achievement.unlocked);\n  const lockedAchievements = achievements.filter(achievement => !achievement.unlocked);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Stats & Achievements</Text>\n      \n      <View style={styles.statsContainer}>\n        <View style={styles.statItem}>\n          <Text style={styles.statValue}>{Math.floor(resources.ecoPoints)}</Text>\n          <Text style={styles.statLabel}>Eco Points</Text>\n        </View>\n        \n        <View style={styles.statItem}>\n          <Text style={styles.statValue}>{pointsPerSecond.toFixed(2)}</Text>\n          <Text style={styles.statLabel}>Points/sec</Text>\n        </View>\n        \n        <View style={styles.statItem}>\n          <Text style={styles.statValue}>{stats.totalClicks}</Text>\n          <Text style={styles.statLabel}>Total Clicks</Text>\n        </View>\n        \n        <View style={styles.statItem}>\n          <Text style={styles.statValue}>{Math.floor(stats.totalEcoPoints)}</Text>\n          <Text style={styles.statLabel}>Total Points</Text>\n        </View>\n      </View>\n\n      <View style={styles.divider} />\n      \n      <Text style={styles.sectionTitle}>Environmental Impact</Text>\n      <View style={styles.impactContainer}>\n        <View style={styles.impactItem}>\n          <Text style={styles.impactIcon}>🌳</Text>\n          <View style={styles.impactTextContainer}>\n            <Text style={styles.impactValue}>{stats.treesPlanted.toFixed(2)}</Text>\n            <Text style={styles.impactLabel}>Trees Planted</Text>\n          </View>\n        </View>\n        \n        <View style={styles.impactItem}>\n          <Text style={styles.impactIcon}>💨</Text>\n          <View style={styles.impactTextContainer}>\n            <Text style={styles.impactValue}>{stats.co2Reduced.toFixed(2)} kg</Text>\n            <Text style={styles.impactLabel}>CO2 Reduced</Text>\n          </View>\n        </View>\n      </View>\n      \n      <View style={styles.divider} />\n      \n      <Text style={styles.sectionTitle}>Achievements ({unlockedAchievements.length}/{achievements.length})</Text>\n      \n      <ScrollView style={styles.achievementsContainer}>\n        {unlockedAchievements.map(achievement => (\n          <View key={achievement.id} style={styles.achievementItem}>\n            <Text style={styles.achievementIcon}>{achievement.icon}</Text>\n            <View style={styles.achievementInfo}>\n              <Text style={styles.achievementName}>{achievement.name}</Text>\n              <Text style={styles.achievementDescription}>{achievement.description}</Text>\n            </View>\n          </View>\n        ))}\n        \n        {lockedAchievements.map(achievement => (\n          <View key={achievement.id} style={[styles.achievementItem, styles.lockedAchievement]}>\n            <Text style={styles.achievementIcon}>🔒</Text>\n            <View style={styles.achievementInfo}>\n              <Text style={styles.lockedAchievementName}>???</Text>\n              <Text style={styles.lockedAchievementDescription}>Keep playing to unlock!</Text>\n            </View>\n          </View>\n        ))}\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: '#E8F5E9',\n    borderRadius: 10,\n    marginVertical: 10,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#2E7D32',\n    marginBottom: 15,\n    textAlign: 'center',\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    flexWrap: 'wrap',\n  },\n  statItem: {\n    alignItems: 'center',\n    minWidth: '22%',\n    marginBottom: 10,\n  },\n  statValue: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#1B5E20',\n  },\n  statLabel: {\n    fontSize: 12,\n    color: '#388E3C',\n  },\n  divider: {\n    height: 1,\n    backgroundColor: '#81C784',\n    marginVertical: 10,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#2E7D32',\n    marginVertical: 10,\n  },\n  impactContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 15,\n  },\n  impactItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  impactIcon: {\n    fontSize: 24,\n    marginRight: 8,\n  },\n  impactTextContainer: {\n    alignItems: 'flex-start',\n  },\n  impactValue: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#1B5E20',\n  },\n  impactLabel: {\n    fontSize: 12,\n    color: '#388E3C',\n  },\n  achievementsContainer: {\n    maxHeight: 200,\n  },\n  achievementItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#C8E6C9',\n    borderRadius: 8,\n    padding: 10,\n    marginBottom: 8,\n  },\n  lockedAchievement: {\n    backgroundColor: '#F1F8E9',\n    opacity: 0.6,\n  },\n  achievementIcon: {\n    fontSize: 24,\n    marginRight: 10,\n  },\n  achievementInfo: {\n    flex: 1,\n  },\n  achievementName: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#1B5E20',\n  },\n  achievementDescription: {\n    fontSize: 12,\n    color: '#33691E',\n  },\n  lockedAchievementName: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#689F38',\n  },\n  lockedAchievementDescription: {\n    fontSize: 12,\n    color: '#689F38',\n    fontStyle: 'italic',\n  },\n});\n\nexport default Stats;","import { useState, useEffect } from 'react';\nimport buildingsData from '../data/buildings.json';\nimport achievementsData from '../data/achievements.json';\n\n// Define the hardcoded prestige bonus value for all buildings\nconst PRESTIGE_BONUS = 0.1; // 10% bonus per prestige level\n\n// Define the initial game state\nconst initialState = {\n  resources: {\n    ecoPoints: 0,\n    carbonOffset: 0,\n    renewableEnergy: 0,\n  },\n  stats: {\n    totalClicks: 0,\n    totalEcoPoints: 0,\n    treesPlanted: 0,\n    co2Reduced: 0,\n    totalPrestiges: 0,\n  },\n  multipliers: {\n    clickMultiplier: 1,\n    passiveMultiplier: 1,\n  },\n  buildings: buildingsData.map(building => ({\n    ...building,\n    level: 0,\n    prestigeLevel: 0,\n  })),\n  achievements: achievementsData.map(achievement => ({\n    ...achievement,\n    unlocked: false,\n  })),\n  notifications: [],\n  settings: {\n    soundEnabled: true,\n    particlesEnabled: true,\n  },\n  lastSaved: null,\n};\n\n// Calculate building cost based on base cost, current level, and prestige level\nconst calculateBuildingCost = (baseCost, level, prestigeLevel) => {\n  // Increase base cost by 50% for each prestige level\n  const prestigedBaseCost = baseCost * Math.pow(1.5, prestigeLevel);\n  return Math.floor(prestigedBaseCost * Math.pow(1.15, level));\n};\n\n// Calculate the total points per second from passive buildings\nconst calculatePointsPerSecond = (buildings, multipliers) => {\n  return buildings\n    .filter(building => building.type === 'passive' && building.level > 0)\n    .reduce((sum, building) => {\n      // Include prestige bonus in calculation - use hardcoded value\n      const prestigeBonus = 1 + (building.prestigeLevel * PRESTIGE_BONUS);\n      return sum + (building.baseEffect * building.level * prestigeBonus);\n    }, 0) * multipliers.passiveMultiplier;\n};\n\n// Calculate the click value based on buildings\nconst calculateClickValue = (buildings, multipliers) => {\n  const baseClick = 1;\n  const clickBonus = buildings\n    .filter(building => building.type === 'click' && building.level > 0)\n    .reduce((sum, building) => {\n      // Include prestige bonus in calculation - use hardcoded value\n      const prestigeBonus = 1 + (building.prestigeLevel * PRESTIGE_BONUS);\n      return sum + (building.baseEffect * building.level * prestigeBonus);\n    }, 0);\n  \n  return (baseClick + clickBonus) * multipliers.clickMultiplier;\n};\n\n// Check if an achievement should be unlocked\nconst checkAchievementCondition = (achievement, gameState) => {\n  switch (achievement.conditionType) {\n    case 'totalClicks':\n      return gameState.stats.totalClicks >= achievement.conditionValue;\n    case 'totalEcoPoints':\n      return gameState.stats.totalEcoPoints >= achievement.conditionValue;\n    case 'totalBuildings':\n      const totalBuildings = gameState.buildings.reduce((sum, building) => sum + building.level, 0);\n      return totalBuildings >= achievement.conditionValue;\n    case 'totalPrestiges':\n      return gameState.stats.totalPrestiges >= achievement.conditionValue;\n    default:\n      return false;\n  }\n};\n\nconst useGameState = () => {\n  const [gameState, setGameState] = useState(() => {\n    // Try to load the game state from localStorage\n    const savedState = localStorage.getItem('ecoClickerSave');\n    if (savedState) {\n      try {\n        const parsedState = JSON.parse(savedState);\n        \n        // Add any missing fields from the initial state (for compatibility)\n        const updatedState = {\n          ...initialState,\n          ...parsedState,\n          stats: {\n            ...initialState.stats,\n            ...parsedState.stats,\n            totalPrestiges: parsedState.stats.totalPrestiges || 0,\n          },\n          buildings: initialState.buildings.map(initialBuilding => {\n            const savedBuilding = parsedState.buildings.find(b => b.id === initialBuilding.id);\n            if (savedBuilding) {\n              return {\n                ...initialBuilding,\n                level: savedBuilding.level || 0,\n                unlocked: savedBuilding.unlocked !== undefined ? savedBuilding.unlocked : initialBuilding.unlocked,\n                prestigeLevel: savedBuilding.prestigeLevel || 0,\n              };\n            }\n            return initialBuilding;\n          }),\n          achievements: initialState.achievements.map(initialAchievement => {\n            const savedAchievement = parsedState.achievements.find(a => a.id === initialAchievement.id);\n            if (savedAchievement) {\n              return {\n                ...initialAchievement,\n                unlocked: savedAchievement.unlocked || false,\n              };\n            }\n            return initialAchievement;\n          }),\n          notifications: [], // Always start with empty notifications\n        };\n        \n        return updatedState;\n      } catch (error) {\n        console.error('Failed to parse saved game state:', error);\n        // Delete corrupted save data\n        localStorage.removeItem('ecoClickerSave');\n        return initialState;\n      }\n    }\n    return initialState;\n  });\n\n  // Save game state to localStorage whenever it changes\n  useEffect(() => {\n    const saveGame = () => {\n      const stateToSave = {\n        ...gameState,\n        lastSaved: new Date().toISOString(),\n      };\n      localStorage.setItem('ecoClickerSave', JSON.stringify(stateToSave));\n    };\n\n    // Save every 30 seconds\n    const saveInterval = setInterval(saveGame, 30000);\n    \n    // Save when the component unmounts\n    return () => {\n      clearInterval(saveInterval);\n      saveGame();\n    };\n  }, [gameState]);\n\n  // Passive income effect - runs every second\n  useEffect(() => {\n    const pointsPerSecond = calculatePointsPerSecond(gameState.buildings, gameState.multipliers);\n    \n    if (pointsPerSecond > 0) {\n      const timer = setInterval(() => {\n        setGameState(prevState => {\n          // Find the tree plantation building\n          const treePlantation = prevState.buildings.find(b => b.id === 'tree_plantation');\n          \n          // Calculate points generated by tree plantation only, with prestige bonus\n          let treePlantationPoints = 0;\n          if (treePlantation && treePlantation.level > 0) {\n            const prestigeBonus = 1 + (treePlantation.prestigeLevel * PRESTIGE_BONUS);\n            treePlantationPoints = treePlantation.baseEffect * treePlantation.level * prestigeBonus * prevState.multipliers.passiveMultiplier;\n          }\n          \n          // Plant 1 tree per 50 points generated by the tree plantation\n          const treesToPlant = treePlantationPoints * (1/50);\n          \n          // CO2 reduction is still based on all eco points (0.05kg per point)\n          const co2ToReduce = pointsPerSecond * 0.05;\n          \n          return {\n            ...prevState,\n            resources: {\n              ...prevState.resources,\n              ecoPoints: prevState.resources.ecoPoints + pointsPerSecond,\n            },\n            stats: {\n              ...prevState.stats,\n              totalEcoPoints: prevState.stats.totalEcoPoints + pointsPerSecond,\n              treesPlanted: prevState.stats.treesPlanted + treesToPlant,\n              co2Reduced: prevState.stats.co2Reduced + co2ToReduce,\n            },\n          };\n        });\n      }, 1000);\n      \n      return () => clearInterval(timer);\n    }\n  }, [gameState.buildings, gameState.multipliers]);\n\n  // Notification management - auto-remove after 5 seconds\n  useEffect(() => {\n    if (gameState.notifications.length > 0) {\n      const timer = setTimeout(() => {\n        setGameState(prevState => ({\n          ...prevState,\n          notifications: prevState.notifications.slice(1), // Remove the oldest notification\n        }));\n      }, 5000);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [gameState.notifications]);\n\n  // Check for newly unlocked buildings and achievements\n  useEffect(() => {\n    let hasChanges = false;\n    const newState = { ...gameState };\n    const newNotifications = [...gameState.notifications];\n\n    // Check for buildings to unlock\n    newState.buildings = gameState.buildings.map(building => {\n      if (!building.unlocked && building.unlockAt && gameState.resources.ecoPoints >= building.unlockAt) {\n        hasChanges = true;\n        // Add notification for unlocked building\n        newNotifications.push({\n          id: `building-${building.id}`,\n          type: 'building',\n          title: 'New Building Unlocked!',\n          message: `${building.name} (${building.icon}) is now available for purchase!`,\n          icon: building.icon,\n        });\n        return { ...building, unlocked: true };\n      }\n      return building;\n    });\n\n    // Check for achievements to unlock\n    newState.achievements = gameState.achievements.map(achievement => {\n      if (!achievement.unlocked && checkAchievementCondition(achievement, gameState)) {\n        hasChanges = true;\n        // Add notification for unlocked achievement\n        newNotifications.push({\n          id: `achievement-${achievement.id}`,\n          type: 'achievement',\n          title: 'Achievement Unlocked!',\n          message: `${achievement.name}: ${achievement.description}`,\n          condition: achievement.conditionText,\n          icon: achievement.icon,\n        });\n        return { ...achievement, unlocked: true };\n      }\n      return achievement;\n    });\n\n    if (hasChanges) {\n      setGameState({\n        ...newState,\n        notifications: newNotifications,\n      });\n    }\n  }, [gameState.resources, gameState.stats, gameState.buildings]);\n\n  // Handle clicking on the main clicker area\n  const handleClick = () => {\n    const clickValue = calculateClickValue(gameState.buildings, gameState.multipliers);\n    \n    // CO2 reduction is still based on all eco points (0.05kg per point)\n    const co2ToReduce = clickValue * 0.05;\n    \n    setGameState(prevState => ({\n      ...prevState,\n      resources: {\n        ...prevState.resources,\n        ecoPoints: prevState.resources.ecoPoints + clickValue,\n      },\n      stats: {\n        ...prevState.stats,\n        totalClicks: prevState.stats.totalClicks + 1,\n        totalEcoPoints: prevState.stats.totalEcoPoints + clickValue,\n        // No trees planted from clicking - only from Tree Plantation building\n        co2Reduced: prevState.stats.co2Reduced + co2ToReduce,\n      },\n    }));\n  };\n\n  // Handle purchasing a building\n  const purchaseBuilding = (buildingId) => {\n    const buildingIndex = gameState.buildings.findIndex(b => b.id === buildingId);\n    \n    if (buildingIndex === -1) return false;\n    \n    const building = gameState.buildings[buildingIndex];\n    \n    // Check if we can purchase this building\n    if (building.level >= building.maxLevel) return false;\n    \n    // Use the updated cost calculation that includes prestige level\n    const cost = calculateBuildingCost(building.baseCost, building.level, building.prestigeLevel);\n    \n    if (gameState.resources.ecoPoints < cost) return false;\n    \n    const newBuildings = [...gameState.buildings];\n    newBuildings[buildingIndex] = {\n      ...building,\n      level: building.level + 1,\n    };\n    \n    // Update multipliers if it's a multiplier building\n    let newMultipliers = { ...gameState.multipliers };\n    if (building.type === 'multiplier') {\n      const prestigeBonus = 1 + (building.prestigeLevel * PRESTIGE_BONUS);\n      const effectValue = building.baseEffect * prestigeBonus;\n      \n      newMultipliers = {\n        clickMultiplier: gameState.multipliers.clickMultiplier + effectValue,\n        passiveMultiplier: gameState.multipliers.passiveMultiplier + effectValue,\n      };\n    }\n    \n    setGameState(prevState => ({\n      ...prevState,\n      resources: {\n        ...prevState.resources,\n        ecoPoints: prevState.resources.ecoPoints - cost,\n      },\n      buildings: newBuildings,\n      multipliers: newMultipliers,\n    }));\n    \n    return true;\n  };\n\n  // Handle prestiging a building\n  const prestigeBuilding = (buildingId) => {\n    const buildingIndex = gameState.buildings.findIndex(b => b.id === buildingId);\n    \n    if (buildingIndex === -1) return false;\n    \n    const building = gameState.buildings[buildingIndex];\n    \n    // Can only prestige if building is at max level\n    if (building.level < building.maxLevel) return false;\n    \n    const newBuildings = [...gameState.buildings];\n    newBuildings[buildingIndex] = {\n      ...building,\n      level: 0, // Reset level\n      prestigeLevel: building.prestigeLevel + 1, // Increase prestige level\n    };\n    \n    // Reset multipliers if it's a multiplier building\n    let newMultipliers = { ...gameState.multipliers };\n    if (building.type === 'multiplier') {\n      // Remove old effect and add new effect with prestige bonus\n      const oldEffect = building.baseEffect * building.level;\n      const newPrestigeBonus = 1 + ((building.prestigeLevel + 1) * PRESTIGE_BONUS);\n      \n      newMultipliers = {\n        clickMultiplier: gameState.multipliers.clickMultiplier - oldEffect,\n        passiveMultiplier: gameState.multipliers.passiveMultiplier - oldEffect,\n      };\n    }\n    \n    // Add notification for prestige\n    const newNotifications = [...gameState.notifications];\n    newNotifications.push({\n      id: `prestige-${building.id}-${Date.now()}`,\n      type: 'prestige',\n      title: 'Building Prestiged!',\n      message: `${building.name} has been prestiged to level ${building.prestigeLevel + 1}!`,\n      icon: '🌟',\n    });\n    \n    setGameState(prevState => ({\n      ...prevState,\n      buildings: newBuildings,\n      multipliers: newMultipliers,\n      stats: {\n        ...prevState.stats,\n        totalPrestiges: prevState.stats.totalPrestiges + 1,\n      },\n      notifications: newNotifications,\n    }));\n    \n    return true;\n  };\n\n  // Function to add cheat points\n  const addCheatPoints = () => {\n    const points = parseInt(pointsToAdd, 10);\n    if (!isNaN(points) && points > 0) {\n      setGameState(prevState => ({\n        ...prevState,\n        resources: {\n          ...prevState.resources,\n          ecoPoints: prevState.resources.ecoPoints + points,\n        },\n        stats: {\n          ...prevState.stats,\n          totalEcoPoints: prevState.stats.totalEcoPoints + points,\n        },\n      }));\n      setCheatMenuVisible(false);\n    }\n  };\n\n  // Reset the game\n  const resetGame = () => {\n    if (window.confirm('Are you sure you want to reset your progress? This cannot be undone.')) {\n      // Clear all game data from localStorage\n      localStorage.removeItem('ecoClickerSave');\n      // Reset to initial state\n      setGameState(initialState);\n    }\n  };\n\n  return {\n    gameState,\n    handleClick,\n    purchaseBuilding,\n    prestigeBuilding,\n    resetGame,\n    pointsPerSecond: calculatePointsPerSecond(gameState.buildings, gameState.multipliers),\n    clickValue: calculateClickValue(gameState.buildings, gameState.multipliers),\n    getBuildingCost: (buildingId) => {\n      const building = gameState.buildings.find(b => b.id === buildingId);\n      if (!building) return null;\n      return calculateBuildingCost(building.baseCost, building.level, building.prestigeLevel);\n    },\n    checkCanPrestige: (buildingId) => {\n      const building = gameState.buildings.find(b => b.id === buildingId);\n      if (!building) return false;\n      return building.level >= building.maxLevel;\n    },\n    getPrestigeBonus: (buildingId) => {\n      // Return the hardcoded prestige bonus value instead of reading from building object\n      return PRESTIGE_BONUS;\n    },\n    addCheatPoints,\n  };\n};\n\nexport default useGameState;","import React, { useState, useEffect } from 'react';\nimport { \n  StyleSheet, \n  View, \n  Text, \n  SafeAreaView, \n  ScrollView, \n  StatusBar,\n  TouchableOpacity,\n  Modal,\n  Animated,\n  FlatList,\n  TextInput\n} from 'react-native';\n\n// Import components\nimport ClickArea from './components/ClickArea';\nimport Buildings from './components/Buildings';\nimport Stats from './components/Stats';\n\n// Import game state hook\nimport useGameState from './hooks/useGameState';\n\nconst App = () => {\n  const {\n    gameState,\n    handleClick,\n    purchaseBuilding,\n    prestigeBuilding,\n    resetGame,\n    pointsPerSecond,\n    clickValue,\n    getBuildingCost,\n    checkCanPrestige,\n    getPrestigeBonus\n  } = useGameState();\n\n  const [activeTab, setActiveTab] = useState('buildings');\n  const [infoModalVisible, setInfoModalVisible] = useState(false);\n  const [cheatMenuVisible, setCheatMenuVisible] = useState(false);\n  const [pointsToAdd, setPointsToAdd] = useState('1000');\n  \n  // Function to handle key press for cheat code\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      // Check if the pressed key is '²' (keyCode 178)\n      if (event.key === '²') {\n        setCheatMenuVisible(true);\n      }\n    };\n    \n    window.addEventListener('keydown', handleKeyDown);\n    \n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  // Function to format large numbers with K, M, B suffixes\n  const formatNumber = (num) => {\n    if (num < 1000) return Math.floor(num).toString();\n    if (num < 1000000) return (Math.floor(num / 100) / 10).toFixed(1) + 'K';\n    if (num < 1000000000) return (Math.floor(num / 100000) / 10).toFixed(1) + 'M';\n    return (Math.floor(num / 100000000) / 10).toFixed(1) + 'B';\n  };\n\n  // Notification component\n  const NotificationSystem = () => {\n    if (gameState.notifications.length === 0) return null;\n    \n    const renderNotification = ({ item }) => {\n      let bgColor = '#4CAF50'; // default green\n      let iconColor = '#E8F5E9';\n      \n      // Different styles for different notification types\n      if (item.type === 'achievement') {\n        bgColor = '#FFC107'; // amber\n        iconColor = '#FFF9C4';\n      } else if (item.type === 'prestige') {\n        bgColor = '#FF9800'; // orange\n        iconColor = '#FFF3E0';\n      }\n      \n      return (\n        <Animated.View style={[styles.notification, { backgroundColor: bgColor }]}>\n          <View style={[styles.notificationIconContainer, { backgroundColor: iconColor }]}>\n            <Text style={styles.notificationIcon}>{item.icon}</Text>\n          </View>\n          <View style={styles.notificationContent}>\n            <Text style={styles.notificationTitle}>{item.title}</Text>\n            <Text style={styles.notificationMessage}>{item.message}</Text>\n            {item.condition && (\n              <Text style={styles.notificationCondition}>\n                Condition: {item.condition}\n              </Text>\n            )}\n          </View>\n        </Animated.View>\n      );\n    };\n    \n    return (\n      <View style={styles.notificationsContainer}>\n        <FlatList\n          data={gameState.notifications}\n          renderItem={renderNotification}\n          keyExtractor={(item) => item.id}\n          contentContainerStyle={styles.notificationsList}\n        />\n      </View>\n    );\n  };\n\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 'buildings':\n        return (\n          <Buildings\n            buildings={gameState.buildings}\n            ecoPoints={gameState.resources.ecoPoints}\n            onPurchase={purchaseBuilding}\n            prestigeBuilding={prestigeBuilding}\n            checkCanPrestige={checkCanPrestige}\n            getPrestigeBonus={getPrestigeBonus}\n            getBuildingCost={getBuildingCost}\n          />\n        );\n      case 'stats':\n        return (\n          <Stats\n            stats={gameState.stats}\n            resources={gameState.resources}\n            pointsPerSecond={pointsPerSecond}\n            achievements={gameState.achievements}\n          />\n        );\n      default:\n        return <Buildings />;\n    }\n  };\n\n  // Information modal with game explanation and ecological facts\n  const InfoModal = () => (\n    <Modal\n      animationType=\"slide\"\n      transparent={true}\n      visible={infoModalVisible}\n      onRequestClose={() => setInfoModalVisible(false)}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>About EcoClicker</Text>\n          \n          <ScrollView style={styles.modalScrollView}>\n            <Text style={styles.sectionTitle}>How to Play</Text>\n            <Text style={styles.modalText}>\n              Click the Earth to generate eco points. Use your points to purchase buildings that \n              will help you generate more points automatically or increase your click value.\n            </Text>\n            \n            <Text style={styles.sectionTitle}>Ecological Impact</Text>\n            <Text style={styles.modalText}>\n              While EcoClicker is just a game, it aims to raise awareness about ecological issues. \n              Each building represents real-world actions we can take to help our planet.\n            </Text>\n            \n            <Text style={styles.sectionTitle}>Eco Facts</Text>\n            <View style={styles.factContainer}>\n              <Text style={styles.factTitle}>🌳 Trees</Text>\n              <Text style={styles.factText}>\n                A single mature tree can absorb up to 48 pounds of carbon dioxide per year.\n              </Text>\n            </View>\n            \n            <View style={styles.factContainer}>\n              <Text style={styles.factTitle}>☀️ Solar Energy</Text>\n              <Text style={styles.factText}>\n                The sunlight that hits the Earth's surface in just one hour could power the entire world for a year.\n              </Text>\n            </View>\n            \n            <View style={styles.factContainer}>\n              <Text style={styles.factTitle}>♻️ Recycling</Text>\n              <Text style={styles.factText}>\n                Recycling one aluminum can saves enough energy to run a TV for three hours.\n              </Text>\n            </View>\n            \n            <View style={styles.factContainer}>\n              <Text style={styles.factTitle}>🌬️ Wind Energy</Text>\n              <Text style={styles.factText}>\n                Wind turbines can reduce carbon dioxide emissions by 2,000 tons per year compared to fossil fuels.\n              </Text>\n            </View>\n          </ScrollView>\n          \n          <TouchableOpacity\n            style={styles.closeButton}\n            onPress={() => setInfoModalVisible(false)}\n          >\n            <Text style={styles.closeButtonText}>Close</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n\n  // Cheat menu modal\n  const CheatMenu = () => (\n    <Modal\n      animationType=\"slide\"\n      transparent={true}\n      visible={cheatMenuVisible}\n      onRequestClose={() => setCheatMenuVisible(false)}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Cheat Menu</Text>\n          \n          <View style={styles.cheatOption}>\n            <Text style={styles.cheatLabel}>Add EcoPoints:</Text>\n            <TextInput\n              style={styles.cheatInput}\n              value={pointsToAdd}\n              onChangeText={setPointsToAdd}\n              keyboardType=\"numeric\"\n            />\n          </View>\n          \n          <View style={styles.cheatButtonsRow}>\n            <TouchableOpacity\n              style={styles.cheatButton}\n              onPress={() => gameState.addCheatPoints(parseInt(pointsToAdd, 10))}\n            >\n              <Text style={styles.cheatButtonText}>Add Points</Text>\n            </TouchableOpacity>\n            \n            <TouchableOpacity\n              style={[styles.cheatButton, styles.cancelButton]}\n              onPress={() => setCheatMenuVisible(false)}\n            >\n              <Text style={styles.cheatButtonText}>Close</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n\n  return (\n    <SafeAreaView style={styles.safeArea}>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"#E8F5E9\" />\n      \n      <View style={styles.header}>\n        <Text style={styles.title}>EcoClicker</Text>\n        <TouchableOpacity onPress={() => setInfoModalVisible(true)}>\n          <Text style={styles.infoButton}>ℹ️</Text>\n        </TouchableOpacity>\n      </View>\n      \n      <NotificationSystem />\n      \n      <ClickArea \n        onPress={handleClick} \n        clickValue={clickValue} \n        ecoPoints={gameState.resources.ecoPoints}\n        pointsPerSecond={pointsPerSecond}\n        formatNumber={formatNumber}\n        buildings={gameState.buildings}\n      />\n      \n      <View style={styles.tabBar}>\n        <TouchableOpacity\n          style={[styles.tab, activeTab === 'buildings' && styles.activeTab]}\n          onPress={() => setActiveTab('buildings')}\n        >\n          <Text style={[styles.tabText, activeTab === 'buildings' && styles.activeTabText]}>Buildings</Text>\n        </TouchableOpacity>\n        \n        <TouchableOpacity\n          style={[styles.tab, activeTab === 'stats' && styles.activeTab]}\n          onPress={() => setActiveTab('stats')}\n        >\n          <Text style={[styles.tabText, activeTab === 'stats' && styles.activeTabText]}>Stats</Text>\n        </TouchableOpacity>\n      </View>\n      \n      <View style={styles.contentContainer}>\n        {renderTabContent()}\n      </View>\n      \n      <View style={styles.footer}>\n        <TouchableOpacity style={styles.resetButton} onPress={resetGame}>\n          <Text style={styles.resetButtonText}>Reset Game</Text>\n        </TouchableOpacity>\n      </View>\n      \n      <InfoModal />\n      <CheatMenu />\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n    backgroundColor: '#F1F8E9',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#4CAF50',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  infoButton: {\n    fontSize: 24,\n  },\n  tabBar: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: '#81C784',\n  },\n  tab: {\n    flex: 1,\n    paddingVertical: 10,\n    alignItems: 'center',\n  },\n  activeTab: {\n    borderBottomWidth: 3,\n    borderBottomColor: '#4CAF50',\n  },\n  tabText: {\n    fontSize: 16,\n    color: '#689F38',\n  },\n  activeTabText: {\n    fontWeight: 'bold',\n    color: '#2E7D32',\n  },\n  contentContainer: {\n    flex: 1,\n    padding: 10,\n  },\n  footer: {\n    padding: 10,\n    alignItems: 'center',\n    borderTopWidth: 1,\n    borderTopColor: '#E0E0E0',\n  },\n  resetButton: {\n    padding: 10,\n  },\n  resetButtonText: {\n    color: '#BF360C',\n    fontSize: 14,\n  },\n  modalOverlay: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    width: '90%',\n    maxHeight: '80%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    alignItems: 'center',\n  },\n  modalTitle: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#2E7D32',\n    marginBottom: 15,\n  },\n  modalScrollView: {\n    width: '100%',\n    marginBottom: 15,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#388E3C',\n    marginTop: 15,\n    marginBottom: 8,\n  },\n  modalText: {\n    fontSize: 16,\n    color: '#333',\n    marginBottom: 10,\n    lineHeight: 22,\n  },\n  factContainer: {\n    marginBottom: 15,\n    padding: 10,\n    backgroundColor: '#E8F5E9',\n    borderRadius: 8,\n  },\n  factTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#2E7D32',\n    marginBottom: 5,\n  },\n  factText: {\n    fontSize: 14,\n    color: '#333',\n    lineHeight: 20,\n  },\n  closeButton: {\n    backgroundColor: '#4CAF50',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5,\n  },\n  closeButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  notificationsContainer: {\n    position: 'absolute',\n    top: 70, // Position below the header\n    right: 10, // Changed from left to right\n    zIndex: 1000, // Ensure it's above everything else\n    maxWidth: '80%',\n    maxHeight: 150,\n    position: 'fixed', // Add fixed position to keep it visible when scrolling\n  },\n  notificationsList: {\n    // No horizontal padding needed since we have left margin\n  },\n  notification: {\n    flexDirection: 'row',\n    borderRadius: 8,\n    padding: 10,\n    marginVertical: 5,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.3,\n    shadowRadius: 3,\n    elevation: 4,\n  },\n  notificationIconContainer: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 10,\n  },\n  notificationIcon: {\n    fontSize: 20,\n  },\n  notificationContent: {\n    flex: 1,\n  },\n  notificationTitle: {\n    fontWeight: 'bold',\n    color: 'white',\n    fontSize: 16,\n  },\n  notificationMessage: {\n    color: 'white',\n    fontSize: 14,\n  },\n  notificationCondition: {\n    color: 'rgba(255, 255, 255, 0.8)',\n    fontSize: 12,\n    fontStyle: 'italic',\n    marginTop: 2,\n  },\n  cheatOption: {\n    marginBottom: 15,\n    width: '100%',\n  },\n  cheatLabel: {\n    fontSize: 16,\n    color: '#333',\n    marginBottom: 5,\n  },\n  cheatInput: {\n    borderWidth: 1,\n    borderColor: '#CCC',\n    borderRadius: 5,\n    padding: 10,\n    fontSize: 16,\n    width: '100%',\n  },\n  cheatButtonsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  cheatButton: {\n    backgroundColor: '#4CAF50',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5,\n    marginHorizontal: 5,\n  },\n  cheatButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  cancelButton: {\n    backgroundColor: '#F44336',\n  },\n});\n\nexport default App;","import { registerRootComponent } from 'expo';\nimport App from './src/App';\n\n// Register the main component\nregisterRootComponent(App);\n\nexport default App;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [904], () => (__webpack_require__(8879)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["styles","isWeb","webScale","StyleSheet","create","container","alignItems","justifyContent","padding","paddingTop","position","height","minHeight","backgroundColor","borderRadius","marginVertical","marginTop","webContainer","width","maxWidth","marginHorizontal","bannerContainer","marginBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","webBannerContainer","bannerTitle","fontSize","fontWeight","color","webBannerTitle","bannerText","textAlign","webBannerText","pointsDisplay","paddingVertical","paddingHorizontal","borderWidth","borderColor","webPointsDisplay","pointsValue","textShadowColor","textShadowOffset","textShadowRadius","webPointsValue","pointsLabel","webPointsLabel","clickButton","webClickButton","innerCircle","webInnerCircle","buttonText","webButtonText","buttonSubtext","webButtonSubtext","floatingText","zIndex","pointsPerSecondContainer","webPointsPerSecondContainer","pointsPerSecondValue","webPointsPerSecondValue","pointsPerSecondLabel","webPointsPerSecondLabel","valueText","webValueText","_ref","onPress","clickValue","ecoPoints","pointsPerSecond","formatNumber","buildings","_Dimensions$get","Dimensions","get","currentStyles","_useState","useState","_useState2","_slicedToArray","currentTipIndex","setCurrentTipIndex","_useState3","_useState4","isEcoEducationUnlocked","setIsEcoEducationUnlocked","useEffect","ecoEducation","find","building","id","unlocked","tipInterval","setInterval","prevIndex","carbonTips","length","clearInterval","_useState5","_useState6","animations","setAnimations","_useState7","_useState8","nextId","setNextId","_jsxs","View","style","children","_jsx","Text","tip","map","anim","Animated","opacity","transform","translateX","x","translateY","value","TouchableOpacity","newAnim","Math","random","y","Value","Number","toFixed","concat","_toConsumableArray","parallel","timing","toValue","duration","useNativeDriver","start","filter","a","activeOpacity","flex","title","buildingsList","buildingItem","flexDirection","affordableBuilding","unaffordableBuilding","maxedBuilding","buildingIcon","marginRight","iconText","buildingInfo","buildingHeader","buildingName","buildingLevel","prestigeLevel","buildingDescription","prestigeBonus","buildingFooter","costText","affordableText","unaffordableText","maxedText","effectText","fontStyle","emptyContainer","emptyText","prestigeContainer","prestigeText","prestigeButton","alignSelf","prestigeButtonText","onPurchase","prestigeBuilding","checkCanPrestige","getPrestigeBonus","getBuildingCost","availableBuildings","ScrollView","cost","canAfford","maxLevel","level","canPrestige","currentPrestigeBonus","disabled","icon","name","description","type","baseEffect","statsContainer","flexWrap","statItem","minWidth","statValue","statLabel","divider","sectionTitle","impactContainer","impactItem","impactIcon","impactTextContainer","impactValue","impactLabel","achievementsContainer","maxHeight","achievementItem","lockedAchievement","achievementIcon","achievementInfo","achievementName","achievementDescription","lockedAchievementName","lockedAchievementDescription","stats","resources","achievements","unlockedAchievements","achievement","lockedAchievements","floor","totalClicks","totalEcoPoints","treesPlanted","co2Reduced","PRESTIGE_BONUS","initialState","carbonOffset","renewableEnergy","totalPrestiges","multipliers","clickMultiplier","passiveMultiplier","buildingsData","_objectSpread","achievementsData","notifications","settings","soundEnabled","particlesEnabled","lastSaved","calculateBuildingCost","baseCost","prestigedBaseCost","pow","calculatePointsPerSecond","reduce","sum","calculateClickValue","savedState","localStorage","getItem","parsedState","JSON","parse","initialBuilding","savedBuilding","b","undefined","initialAchievement","savedAchievement","error","console","removeItem","gameState","setGameState","saveGame","stateToSave","Date","toISOString","setItem","stringify","saveInterval","timer","prevState","treePlantation","treePlantationPoints","treesToPlant","co2ToReduce","setTimeout","slice","clearTimeout","hasChanges","newState","newNotifications","unlockAt","push","message","conditionType","conditionValue","checkAchievementCondition","condition","conditionText","handleClick","purchaseBuilding","buildingId","buildingIndex","findIndex","newBuildings","newMultipliers","effectValue","oldEffect","now","resetGame","window","confirm","addCheatPoints","points","parseInt","pointsToAdd","isNaN","setCheatMenuVisible","safeArea","header","infoButton","tabBar","borderBottomWidth","borderBottomColor","tab","activeTab","tabText","activeTabText","contentContainer","footer","borderTopWidth","borderTopColor","resetButton","resetButtonText","modalOverlay","modalContent","modalTitle","modalScrollView","modalText","lineHeight","factContainer","factTitle","factText","closeButton","closeButtonText","notificationsContainer","top","right","notificationsList","notification","notificationIconContainer","notificationIcon","notificationContent","notificationTitle","notificationMessage","notificationCondition","cheatOption","cheatLabel","cheatInput","cheatButtonsRow","cheatButton","cheatButtonText","cancelButton","_useGameState","useGameState","setActiveTab","infoModalVisible","setInfoModalVisible","cheatMenuVisible","setPointsToAdd","handleKeyDown","event","key","addEventListener","removeEventListener","SafeAreaView","StatusBar","barStyle","FlatList","data","renderItem","item","bgColor","iconColor","keyExtractor","contentContainerStyle","ClickArea","num","toString","Buildings","Stats","renderTabContent","Modal","animationType","transparent","visible","onRequestClose","TextInput","onChangeText","keyboardType","registerRootComponent","App","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}