{"version":3,"file":"static/js/main.ae87902c.js","mappings":"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","sources":["src/components/ClickArea.jsx","src/components/Buildings.jsx","src/components/Stats.jsx","src/hooks/useGameState.js","src/hooks/useAudio.js","src/App.jsx","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Animated, Platform, Dimensions, ImageBackground } from 'react-native';\nimport carbonTips from '../data/carbonTips.json';\n\nconst ClickArea = ({ onPress, clickValue, ecoPoints, pointsPerSecond, formatNumber, buildings }) => {\n  // Check if we're running on web\n  const isWeb = Platform.OS === 'web';\n  // Get screen dimensions to calculate responsive sizes\n  const { width, height } = Dimensions.get('window');\n\n  // Use the styles function with isWeb parameter\n  const currentStyles = styles(isWeb);\n  \n  // State for the advertising banner\n  const [currentTipIndex, setCurrentTipIndex] = useState(0);\n  const [isEcoEducationUnlocked, setIsEcoEducationUnlocked] = useState(false);\n  \n  // Check if eco_education is unlocked\n  useEffect(() => {\n    if (buildings) {\n      const ecoEducation = buildings.find(building => building.id === 'eco_education');\n      setIsEcoEducationUnlocked(ecoEducation && ecoEducation.unlocked);\n    }\n  }, [buildings]);\n  \n  // Change the tip every 40 seconds\n  useEffect(() => {\n    if (isEcoEducationUnlocked) {\n      const tipInterval = setInterval(() => {\n        setCurrentTipIndex(prevIndex => (prevIndex + 1) % carbonTips.length);\n      }, 40000);\n      \n      return () => clearInterval(tipInterval);\n    }\n  }, [isEcoEducationUnlocked]);\n\n  const [animations, setAnimations] = useState([]);\n  const [nextId, setNextId] = useState(0);\n\n  // Handle the click action\n  const handlePress = () => {\n    // Call the onPress from props\n    onPress();\n\n    // Create a new animation for visual feedback\n    const newAnim = {\n      id: nextId,\n      position: {\n        x: Math.random() * 80 - 40, // Random position near the click area\n        y: -20 - Math.random() * 30, // Start slightly above the click\n      },\n      opacity: new Animated.Value(1),\n      translateY: new Animated.Value(0),\n      value: `+${Number(clickValue).toFixed(2)}`, // Format to 2 decimal places\n    };\n\n    setNextId(nextId + 1);\n    setAnimations([...animations, newAnim]);\n\n    // Animate the point value floating up and fading\n    Animated.parallel([\n      Animated.timing(newAnim.opacity, {\n        toValue: 0,\n        duration: 1500,\n        useNativeDriver: true,\n      }),\n      Animated.timing(newAnim.translateY, {\n        toValue: -100,\n        duration: 1500,\n        useNativeDriver: true,\n      }),\n    ]).start(() => {\n      // Remove this animation from the array once it's done\n      setAnimations(animations => animations.filter(a => a.id !== newAnim.id));\n    });\n  };\n\n  return (\n    <ImageBackground \n      source={require('../../assets/background.png')}\n      style={[\n        currentStyles.backgroundImage,\n        isWeb && currentStyles.webBackgroundImage\n      ]}\n      imageStyle={currentStyles.backgroundImageStyle}\n    >\n      <View style={[\n        currentStyles.container,\n        isWeb && currentStyles.webContainer\n      ]}>\n        {/* Carbon Tips Banner - Only shown when eco_education is unlocked */}\n        {isEcoEducationUnlocked && (\n          <View style={[\n            currentStyles.bannerContainer,\n            isWeb && currentStyles.webBannerContainer\n          ]}>\n            <Text style={[\n              currentStyles.bannerTitle,\n              isWeb && currentStyles.webBannerTitle\n            ]}>💡 Carbon Reduction Tip:</Text>\n            <Text style={[\n              currentStyles.bannerText,\n              isWeb && currentStyles.webBannerText\n            ]}>{carbonTips[currentTipIndex].tip}</Text>\n          </View>\n        )}\n\n        {/* Prominently displayed eco points at the top */}\n        <View style={[\n          currentStyles.pointsDisplay,\n          isWeb && currentStyles.webPointsDisplay\n        ]}>\n          <Text style={[\n            currentStyles.pointsValue,\n            isWeb && currentStyles.webPointsValue\n          ]}>{formatNumber(ecoPoints)}</Text>\n          <Text style={[\n            currentStyles.pointsLabel,\n            isWeb && currentStyles.webPointsLabel\n          ]}>Eco Points</Text>\n        </View>\n\n        {/* Animations for the click effect */}\n        {animations.map(anim => (\n          <Animated.Text\n            key={anim.id}\n            style={[\n              currentStyles.floatingText,\n              {\n                opacity: anim.opacity,\n                transform: [\n                  { translateX: anim.position.x },\n                  { translateY: anim.translateY },\n                ],\n              },\n            ]}\n          >\n            {anim.value}\n          </Animated.Text>\n        ))}\n\n        {/* Main click button */}\n        <TouchableOpacity\n          style={[\n            currentStyles.clickButton,\n            isWeb && currentStyles.webClickButton\n          ]}\n          onPress={handlePress}\n          activeOpacity={0.7}\n        >\n          <View style={[\n            currentStyles.innerCircle,\n            isWeb && currentStyles.webInnerCircle\n          ]}>\n            <Text style={[\n              currentStyles.buttonText,\n              isWeb && currentStyles.webButtonText\n            ]}>🌍</Text>\n            <Text style={[\n              currentStyles.buttonSubtext,\n              isWeb && currentStyles.webButtonSubtext\n            ]}>Click to help!</Text>\n          </View>\n        </TouchableOpacity>\n\n        {/* Points per second below the earth button */}\n        <View style={[\n          currentStyles.pointsPerSecondContainer,\n          isWeb && currentStyles.webPointsPerSecondContainer\n        ]}>\n          <Text style={[\n            currentStyles.pointsPerSecondValue,\n            isWeb && currentStyles.webPointsPerSecondValue\n          ]}>+{formatNumber(pointsPerSecond)}</Text>\n          <Text style={[\n            currentStyles.pointsPerSecondLabel,\n            isWeb && currentStyles.webPointsPerSecondLabel\n          ]}>points per second</Text>\n        </View>\n      </View>\n    </ImageBackground>\n  );\n};\n\n// Convert styles to a function that takes isWeb as a parameter and calculates webScale internally\nconst styles = (isWeb) => {\n  const webScale = isWeb ? 1.5 : 1;\n\n  return StyleSheet.create({\n    backgroundImage: {\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      // Restricting the height to not influence other panels\n      height: 'auto',\n      overflow: 'hidden',\n    },\n    webBackgroundImage: {\n      width: '100%', \n      marginHorizontal: 'auto',\n    },\n    backgroundImageStyle: {\n      opacity: 0.3,\n      // Change from 'cover' to 'contain' to prevent overflow\n      resizeMode: 'contain',\n      width: '100%',\n      // Limit the height to prevent influencing other panels\n      height: '100%',\n      position: 'absolute',\n      top: 0,\n    },\n    container: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: 20,\n      paddingTop: 30, // Increased top padding to create more space from header\n      position: 'relative',\n      height: 'auto', // Changed to auto to accommodate the banner\n      minHeight: 340, // Minimum height\n      backgroundColor: 'rgba(232, 245, 233, 0.8)', // Make it slightly transparent to show background\n      borderRadius: 15,\n      marginVertical: 15, // Increased vertical margin\n      marginTop: 20, // Extra margin at the top\n      width: '100%',\n    },\n    webContainer: {\n      width: '80%',\n      maxWidth: 600,\n      height: 'auto',\n      minHeight: 340,\n      marginHorizontal: 'auto',\n    },\n    // New styles for the banner\n    bannerContainer: {\n      width: '100%',\n      backgroundColor: '#2196F3',\n      padding: 10,\n      borderRadius: 10,\n      marginBottom: 15,\n      shadowColor: '#000',\n      shadowOffset: { width: 0, height: 2 },\n      shadowOpacity: 0.2,\n      shadowRadius: 3,\n      elevation: 4,\n    },\n    webBannerContainer: {\n      width: '100%',\n      maxWidth: 550,\n    },\n    bannerTitle: {\n      fontSize: 16,\n      fontWeight: 'bold',\n      color: 'white',\n      marginBottom: 5,\n    },\n    webBannerTitle: {\n      fontSize: 16 * webScale,\n    },\n    bannerText: {\n      fontSize: 14,\n      color: 'white',\n      textAlign: 'center',\n    },\n    webBannerText: {\n      fontSize: 14 * webScale,\n    },\n    pointsDisplay: {\n      alignItems: 'center',\n      marginBottom: 25, // Increased bottom margin\n      backgroundColor: '#4CAF50',\n      paddingVertical: 14, // More vertical padding\n      paddingHorizontal: 35, // More horizontal padding\n      borderRadius: 30,\n      shadowColor: '#000',\n      shadowOffset: { width: 0, height: 4 }, // Stronger shadow\n      shadowOpacity: 0.35, // More opaque shadow\n      shadowRadius: 7, // Larger shadow radius\n      elevation: 10, // Higher elevation for Android\n      borderWidth: 2, // Add border\n      borderColor: '#388E3C', // Border color\n    },\n    webPointsDisplay: {\n      width: '100%',\n      maxWidth: 500,\n    },\n    pointsValue: {\n      fontSize: 38, // Larger font size\n      fontWeight: 'bold',\n      color: 'white',\n      textShadowColor: 'rgba(0, 0, 0, 0.2)', // Add text shadow\n      textShadowOffset: { width: 1, height: 1 },\n      textShadowRadius: 3,\n    },\n    webPointsValue: {\n      fontSize: 38 * webScale,\n    },\n    pointsLabel: {\n      fontSize: 16, // Larger label font\n      color: '#E8F5E9',\n      fontWeight: '600', // Slightly bolder\n      marginTop: 2, // Small space between value and label\n    },\n    webPointsLabel: {\n      fontSize: 16 * webScale,\n    },\n    clickButton: {\n      width: 150,\n      height: 150,\n      borderRadius: 75,\n      backgroundColor: '#4CAF50',\n      justifyContent: 'center',\n      alignItems: 'center',\n      shadowColor: '#000',\n      shadowOffset: { width: 0, height: 4 },\n      shadowOpacity: 0.3,\n      shadowRadius: 5,\n      elevation: 8,\n    },\n    webClickButton: {\n      width: 150 * webScale,\n      height: 150 * webScale,\n      borderRadius: 75 * webScale,\n    },\n    innerCircle: {\n      width: 130,\n      height: 130,\n      borderRadius: 65,\n      backgroundColor: '#81C784',\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderWidth: 3,\n      borderColor: '#388E3C',\n    },\n    webInnerCircle: {\n      width: 130 * webScale,\n      height: 130 * webScale,\n      borderRadius: 65 * webScale,\n    },\n    buttonText: {\n      fontSize: 48,\n      marginBottom: 5,\n    },\n    webButtonText: {\n      fontSize: 48 * webScale,\n    },\n    buttonSubtext: {\n      fontSize: 12,\n      color: '#1B5E20',\n      fontWeight: 'bold',\n    },\n    webButtonSubtext: {\n      fontSize: 12 * webScale,\n    },\n    floatingText: {\n      position: 'absolute',\n      zIndex : 1,\n      fontSize: 30,\n      fontWeight: 'bold',\n      color: '#2f8032',\n    },\n    pointsPerSecondContainer: {\n      marginTop: 15,\n      alignItems: 'center',\n      backgroundColor: '#81C784',\n      paddingVertical: 6,\n      paddingHorizontal: 15,\n      borderRadius: 15,\n    },\n    webPointsPerSecondContainer: {\n      width: '100%',\n      maxWidth: 500,\n    },\n    pointsPerSecondValue: {\n      fontSize: 18,\n      fontWeight: 'bold',\n      color: 'white',\n    },\n    webPointsPerSecondValue: {\n      fontSize: 18 * webScale,\n    },\n    pointsPerSecondLabel: {\n      fontSize: 12,\n      color: '#E8F5E9',\n    },\n    webPointsPerSecondLabel: {\n      fontSize: 12 * webScale,\n    },\n    valueText: {\n      marginTop: 10,\n      fontSize: 16,\n      color: '#1B5E20',\n      fontWeight: '500',\n    },\n    webValueText: {\n      fontSize: 16 * webScale,\n    },\n  });\n};\n\nexport default ClickArea;","import React from 'react';\nimport { View, Text, ScrollView, TouchableOpacity, StyleSheet } from 'react-native';\n\nconst Buildings = ({ buildings, ecoPoints, onPurchase, prestigeBuilding, checkCanPrestige, getPrestigeBonus, getBuildingCost }) => {\n  // Filter buildings to only show unlocked ones\n  const availableBuildings = buildings.filter(building => building.unlocked);\n\n  // Render a single building item\n  const renderBuildingItem = (building) => {\n    // Use the getBuildingCost function provided via props\n    const cost = getBuildingCost(building.id);\n    const canAfford = ecoPoints >= cost;\n    const maxLevel = building.level >= building.maxLevel;\n    const canPrestige = checkCanPrestige && checkCanPrestige(building.id);\n    // Use getPrestigeBonus function to get the consistent 10% value\n    const prestigeBonus = getPrestigeBonus(building.id);\n    const currentPrestigeBonus = building.prestigeLevel > 0 ? (building.prestigeLevel * prestigeBonus * 100).toFixed(0) : 0;\n    \n    return (\n      <TouchableOpacity\n        key={building.id}\n        style={[\n          styles.buildingItem,\n          maxLevel ? styles.maxedBuilding : \n            canAfford ? styles.affordableBuilding : styles.unaffordableBuilding\n        ]}\n        onPress={() => canPrestige ? prestigeBuilding(building.id) : onPurchase(building.id)}\n        disabled={!canAfford && !canPrestige}\n      >\n        <View style={styles.buildingIcon}>\n          <Text style={styles.iconText}>{building.icon}</Text>\n        </View>\n        \n        <View style={styles.buildingInfo}>\n          <View style={styles.buildingHeader}>\n            <Text style={styles.buildingName}>{building.name}</Text>\n            <Text style={styles.buildingLevel}>\n              Lvl {building.level}/{building.maxLevel}\n              {building.prestigeLevel > 0 && <Text style={styles.prestigeLevel}> 🌟{building.prestigeLevel}</Text>}\n            </Text>\n          </View>\n          \n          <Text style={styles.buildingDescription}>{building.description}</Text>\n          \n          {building.prestigeLevel > 0 && (\n            <Text style={styles.prestigeBonus}>Current prestige bonus: +{currentPrestigeBonus}%</Text>\n          )}\n          \n          {canPrestige ? (\n            <View style={styles.prestigeContainer}>\n              <Text style={styles.prestigeText}>\n                Prestige now for +{(prestigeBonus * 100).toFixed(0)}% permanent bonus!\n              </Text>\n              <TouchableOpacity \n                style={styles.prestigeButton}\n                onPress={() => prestigeBuilding(building.id)}\n              >\n                <Text style={styles.prestigeButtonText}>PRESTIGE 🌟</Text>\n              </TouchableOpacity>\n            </View>\n          ) : (\n            <View style={styles.buildingFooter}>\n              <Text style={[\n                styles.costText,\n                maxLevel ? styles.maxedText : \n                  canAfford ? styles.affordableText : styles.unaffordableText\n              ]}>\n                {maxLevel ? 'MAX LEVEL' : `Cost: ${cost} eco points`}\n              </Text>\n              \n              {building.type === 'passive' && (\n                <Text style={styles.effectText}>\n                  +{(building.baseEffect * (building.level + 1) * (1 + (building.prestigeLevel * prestigeBonus || 0))).toFixed(1)} pts/sec\n                </Text>\n              )}\n              \n              {building.type === 'click' && (\n                <Text style={styles.effectText}>\n                  +{(building.baseEffect * (building.level + 1) * (1 + (building.prestigeLevel * prestigeBonus || 0))).toFixed(1)} per click\n                </Text>\n              )}\n              \n              {building.type === 'multiplier' && (\n                <Text style={styles.effectText}>\n                  +{(building.baseEffect * (building.level + 1) * (1 + (building.prestigeLevel * prestigeBonus || 0)) * 100).toFixed(1)}% bonus\n                </Text>\n              )}\n              \n              {building.type === 'hybrid' && (\n                <View>\n                  <Text style={styles.effectText}>\n                    +{(building.baseEffect * (building.level + 1) * (1 + (building.prestigeLevel * prestigeBonus || 0))).toFixed(1)} pts/sec\n                  </Text>\n                  <Text style={styles.effectText}>\n                    +{(building.clickEffect * (building.level + 1) * (1 + (building.prestigeLevel * prestigeBonus || 0))).toFixed(1)} per click\n                  </Text>\n                </View>\n              )}\n            </View>\n          )}\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Buildings</Text>\n      \n      {availableBuildings.length === 0 ? (\n        <View style={styles.emptyContainer}>\n          <Text style={styles.emptyText}>No buildings available yet! Keep clicking to unlock more.</Text>\n        </View>\n      ) : (\n        <ScrollView style={styles.buildingsList}>\n          {availableBuildings.map(renderBuildingItem)}\n        </ScrollView>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: '#E8F5E9',\n    borderRadius: 10,\n    marginVertical: 10,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#2E7D32',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  buildingsList: {\n    flex: 1,\n  },\n  buildingItem: {\n    flexDirection: 'row',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 10,\n    alignItems: 'center',\n  },\n  affordableBuilding: {\n    backgroundColor: '#C8E6C9',\n    borderWidth: 1,\n    borderColor: '#43A047',\n  },\n  unaffordableBuilding: {\n    backgroundColor: '#DCEDC8',\n    borderWidth: 1,\n    borderColor: '#AED581',\n    opacity: 0.8,\n  },\n  maxedBuilding: {\n    backgroundColor: '#B3E5FC',\n    borderWidth: 1,\n    borderColor: '#29B6F6',\n  },\n  buildingIcon: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: '#FFFFFF',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 3,\n  },\n  iconText: {\n    fontSize: 24,\n  },\n  buildingInfo: {\n    flex: 1,\n  },\n  buildingHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 4,\n  },\n  buildingName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#1B5E20',\n  },\n  buildingLevel: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: '#388E3C',\n  },\n  prestigeLevel: {\n    color: '#FF6F00',\n    fontWeight: 'bold',\n  },\n  buildingDescription: {\n    fontSize: 14,\n    color: '#33691E',\n    marginBottom: 6,\n  },\n  prestigeBonus: {\n    fontSize: 12,\n    color: '#FF6F00',\n    fontWeight: 'bold',\n    marginBottom: 6,\n  },\n  buildingFooter: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  costText: {\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n  affordableText: {\n    color: '#2E7D32',\n  },\n  unaffordableText: {\n    color: '#BF360C',\n  },\n  maxedText: {\n    color: '#0288D1',\n  },\n  effectText: {\n    fontSize: 13,\n    color: '#33691E',\n    fontStyle: 'italic',\n  },\n  emptyContainer: {\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#689F38',\n    textAlign: 'center',\n  },\n  prestigeContainer: {\n    marginTop: 5,\n    backgroundColor: '#FFF3E0',\n    padding: 8,\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: '#FFB74D',\n  },\n  prestigeText: {\n    fontSize: 13,\n    color: '#E65100',\n    marginBottom: 5,\n    textAlign: 'center',\n  },\n  prestigeButton: {\n    backgroundColor: '#FF9800',\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    borderRadius: 4,\n    alignSelf: 'center',\n  },\n  prestigeButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 14,\n  },\n});\n\nexport default Buildings;","import React from 'react';\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\n\nconst Stats = ({ stats, resources, pointsPerSecond, achievements }) => {\n  // Filter to only show unlocked achievements\n  const unlockedAchievements = achievements.filter(achievement => achievement.unlocked);\n  const lockedAchievements = achievements.filter(achievement => !achievement.unlocked);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Stats & Achievements</Text>\n      \n      <View style={styles.statsContainer}>\n        <View style={styles.statItem}>\n          <Text style={styles.statValue}>{Math.floor(resources.ecoPoints)}</Text>\n          <Text style={styles.statLabel}>Eco Points</Text>\n        </View>\n        \n        <View style={styles.statItem}>\n          <Text style={styles.statValue}>{pointsPerSecond.toFixed(2)}</Text>\n          <Text style={styles.statLabel}>Points/sec</Text>\n        </View>\n        \n        <View style={styles.statItem}>\n          <Text style={styles.statValue}>{stats.totalClicks}</Text>\n          <Text style={styles.statLabel}>Total Clicks</Text>\n        </View>\n        \n        <View style={styles.statItem}>\n          <Text style={styles.statValue}>{Math.floor(stats.totalEcoPoints)}</Text>\n          <Text style={styles.statLabel}>Total Points</Text>\n        </View>\n      </View>\n\n      <View style={styles.divider} />\n      \n      <Text style={styles.sectionTitle}>Environmental Impact</Text>\n      <View style={styles.impactContainer}>\n        <View style={styles.impactItem}>\n          <Text style={styles.impactIcon}>🌳</Text>\n          <View style={styles.impactTextContainer}>\n            <Text style={styles.impactValue}>{stats.treesPlanted.toFixed(2)}</Text>\n            <Text style={styles.impactLabel}>Trees Planted</Text>\n          </View>\n        </View>\n        \n        <View style={styles.impactItem}>\n          <Text style={styles.impactIcon}>💨</Text>\n          <View style={styles.impactTextContainer}>\n            <Text style={styles.impactValue}>{stats.co2Reduced.toFixed(2)} kg</Text>\n            <Text style={styles.impactLabel}>CO2 Reduced</Text>\n          </View>\n        </View>\n      </View>\n      \n      <View style={styles.divider} />\n      \n      <Text style={styles.sectionTitle}>Achievements ({unlockedAchievements.length}/{achievements.length})</Text>\n      \n      <ScrollView style={styles.achievementsContainer}>\n        {unlockedAchievements.map(achievement => (\n          <View key={achievement.id} style={styles.achievementItem}>\n            <Text style={styles.achievementIcon}>{achievement.icon}</Text>\n            <View style={styles.achievementInfo}>\n              <Text style={styles.achievementName}>{achievement.name}</Text>\n              <Text style={styles.achievementDescription}>{achievement.description}</Text>\n            </View>\n          </View>\n        ))}\n        \n        {lockedAchievements.map(achievement => (\n          <View key={achievement.id} style={[styles.achievementItem, styles.lockedAchievement]}>\n            <Text style={styles.achievementIcon}>🔒</Text>\n            <View style={styles.achievementInfo}>\n              <Text style={styles.lockedAchievementName}>???</Text>\n              <Text style={styles.lockedAchievementDescription}>Keep playing to unlock!</Text>\n            </View>\n          </View>\n        ))}\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: '#E8F5E9',\n    borderRadius: 10,\n    marginVertical: 10,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#2E7D32',\n    marginBottom: 15,\n    textAlign: 'center',\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    flexWrap: 'wrap',\n  },\n  statItem: {\n    alignItems: 'center',\n    minWidth: '22%',\n    marginBottom: 10,\n  },\n  statValue: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#1B5E20',\n  },\n  statLabel: {\n    fontSize: 12,\n    color: '#388E3C',\n  },\n  divider: {\n    height: 1,\n    backgroundColor: '#81C784',\n    marginVertical: 10,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#2E7D32',\n    marginVertical: 10,\n  },\n  impactContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 15,\n  },\n  impactItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  impactIcon: {\n    fontSize: 24,\n    marginRight: 8,\n  },\n  impactTextContainer: {\n    alignItems: 'flex-start',\n  },\n  impactValue: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#1B5E20',\n  },\n  impactLabel: {\n    fontSize: 12,\n    color: '#388E3C',\n  },\n  achievementsContainer: {\n    maxHeight: 200,\n  },\n  achievementItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#C8E6C9',\n    borderRadius: 8,\n    padding: 10,\n    marginBottom: 8,\n  },\n  lockedAchievement: {\n    backgroundColor: '#F1F8E9',\n    opacity: 0.6,\n  },\n  achievementIcon: {\n    fontSize: 24,\n    marginRight: 10,\n  },\n  achievementInfo: {\n    flex: 1,\n  },\n  achievementName: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#1B5E20',\n  },\n  achievementDescription: {\n    fontSize: 12,\n    color: '#33691E',\n  },\n  lockedAchievementName: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#689F38',\n  },\n  lockedAchievementDescription: {\n    fontSize: 12,\n    color: '#689F38',\n    fontStyle: 'italic',\n  },\n});\n\nexport default Stats;","import { useState, useEffect, useCallback, useRef } from 'react';\nimport buildingsData from '../data/buildings.json';\nimport achievementsData from '../data/achievements.json';\n\n// Define the hardcoded prestige bonus value for all buildings\nconst PRESTIGE_BONUS = 0.1; // 10% bonus per prestige level\n\n// Define the initial game state\nconst initialState = {\n  resources: {\n    ecoPoints: 0,\n    carbonOffset: 0,\n    renewableEnergy: 0,\n  },\n  stats: {\n    totalClicks: 0,\n    totalEcoPoints: 0,\n    treesPlanted: 0,\n    co2Reduced: 0,\n    totalPrestiges: 0,\n  },\n  multipliers: {\n    clickMultiplier: 1,\n    passiveMultiplier: 1,\n  },\n  buildings: buildingsData.map(building => ({\n    ...building,\n    level: 0,\n    prestigeLevel: 0,\n  })),\n  achievements: achievementsData.map(achievement => ({\n    ...achievement,\n    unlocked: false,\n  })),\n  notifications: [],\n  settings: {\n    soundEnabled: true,\n    particlesEnabled: true,\n  },\n  lastSaved: null,\n};\n\n// Calculate building cost based on base cost, current level, and prestige level\nconst calculateBuildingCost = (baseCost, level, prestigeLevel) => {\n  // Increase base cost by 50% for each prestige level\n  const prestigedBaseCost = baseCost * Math.pow(1.5, prestigeLevel);\n  return Math.floor(prestigedBaseCost * Math.pow(1.15, level));\n};\n\n// Calculate the total points per second from passive buildings\nconst calculatePointsPerSecond = (buildings, multipliers) => {\n  return buildings\n    .filter(building => (building.type === 'passive' || building.type === 'hybrid') && building.level > 0)\n    .reduce((sum, building) => {\n      // Include prestige bonus in calculation - use hardcoded value\n      const prestigeBonus = 1 + (building.prestigeLevel * PRESTIGE_BONUS);\n      return sum + (building.baseEffect * building.level * prestigeBonus);\n    }, 0) * multipliers.passiveMultiplier;\n};\n\n// Calculate the click value based on buildings\nconst calculateClickValue = (buildings, multipliers) => {\n  const baseClick = 1;\n  const clickBonus = buildings\n    .filter(building => (building.type === 'click' || building.type === 'hybrid') && building.level > 0)\n    .reduce((sum, building) => {\n      // Include prestige bonus in calculation - use hardcoded value\n      const prestigeBonus = 1 + (building.prestigeLevel * PRESTIGE_BONUS);\n      // Use clickEffect for hybrid buildings, baseEffect for click buildings\n      const effect = building.type === 'hybrid' ? building.clickEffect : building.baseEffect;\n      return sum + (effect * building.level * prestigeBonus);\n    }, 0);\n  \n  return (baseClick + clickBonus) * multipliers.clickMultiplier;\n};\n\n// Check if an achievement should be unlocked\nconst checkAchievementCondition = (achievement, gameState) => {\n  switch (achievement.conditionType) {\n    case 'totalClicks':\n      return gameState.stats.totalClicks >= achievement.conditionValue;\n    case 'totalEcoPoints':\n      return gameState.stats.totalEcoPoints >= achievement.conditionValue;\n    case 'totalBuildings':\n      const totalBuildings = gameState.buildings.reduce((sum, building) => sum + building.level, 0);\n      return totalBuildings >= achievement.conditionValue;\n    case 'totalPrestiges':\n      return gameState.stats.totalPrestiges >= achievement.conditionValue;\n    case 'treesPlanted':\n      return gameState.stats.treesPlanted >= achievement.conditionValue;\n    case 'buildingLevel':\n      const building = gameState.buildings.find(b => b.id === achievement.conditionBuilding);\n      return building && building.level >= achievement.conditionValue;\n    default:\n      return false;\n  }\n};\n\nconst useGameState = () => {\n  const [gameState, setGameState] = useState(() => {\n    // Try to load the game state from localStorage\n    const savedState = localStorage.getItem('ecoClickerSave');\n    if (savedState) {\n      try {\n        const parsedState = JSON.parse(savedState);\n        \n        // Add any missing fields from the initial state (for compatibility)\n        const updatedState = {\n          ...initialState,\n          ...parsedState,\n          stats: {\n            ...initialState.stats,\n            ...parsedState.stats,\n            totalPrestiges: parsedState.stats.totalPrestiges || 0,\n          },\n          buildings: initialState.buildings.map(initialBuilding => {\n            const savedBuilding = parsedState.buildings.find(b => b.id === initialBuilding.id);\n            if (savedBuilding) {\n              return {\n                ...initialBuilding,\n                level: savedBuilding.level || 0,\n                unlocked: savedBuilding.unlocked !== undefined ? savedBuilding.unlocked : initialBuilding.unlocked,\n                prestigeLevel: savedBuilding.prestigeLevel || 0,\n              };\n            }\n            return initialBuilding;\n          }),\n          achievements: initialState.achievements.map(initialAchievement => {\n            const savedAchievement = parsedState.achievements.find(a => a.id === initialAchievement.id);\n            if (savedAchievement) {\n              return {\n                ...initialAchievement,\n                unlocked: savedAchievement.unlocked || false,\n              };\n            }\n            return initialAchievement;\n          }),\n          notifications: [], // Always start with empty notifications\n        };\n        \n        return updatedState;\n      } catch (error) {\n        console.error('Failed to parse saved game state:', error);\n        // Delete corrupted save data\n        localStorage.removeItem('ecoClickerSave');\n        return initialState;\n      }\n    }\n    return initialState;\n  });\n\n  // Save game state to localStorage whenever it changes\n  useEffect(() => {\n    const saveGame = () => {\n      const stateToSave = {\n        ...gameState,\n        lastSaved: new Date().toISOString(),\n      };\n      localStorage.setItem('ecoClickerSave', JSON.stringify(stateToSave));\n    };\n\n    // Save every 30 seconds\n    const saveInterval = setInterval(saveGame, 30000);\n    \n    // Save when the component unmounts\n    return () => {\n      clearInterval(saveInterval);\n      saveGame();\n    };\n  }, [gameState]);\n\n  // Passive income effect - runs every second\n  useEffect(() => {\n    const pointsPerSecond = calculatePointsPerSecond(gameState.buildings, gameState.multipliers);\n    \n    if (pointsPerSecond > 0) {\n      const timer = setInterval(() => {\n        setGameState(prevState => {\n          // Find the tree plantation building\n          const treePlantation = prevState.buildings.find(b => b.id === 'tree_plantation');\n          \n          // Calculate points generated by tree plantation only, with prestige bonus\n          let treesPlanted = 0;\n          if (treePlantation && treePlantation.level > 0) {\n            const prestigeBonus = 1 + (treePlantation.prestigeLevel * PRESTIGE_BONUS);\n            // Plant 1 tree for each level of tree plantation per second\n            treesPlanted = treePlantation.level * 1;\n          }\n          \n          // CO2 reduction is still based on all eco points (0.05kg per point)\n          const co2ToReduce = pointsPerSecond * 0.05;\n          \n          // Update the building's stats\n          let updatedBuildings = [...prevState.buildings];\n          if (treePlantation) {\n            const treeIndex = updatedBuildings.findIndex(b => b.id === 'tree_plantation');\n            if (treeIndex !== -1) {\n              updatedBuildings[treeIndex] = {\n                ...updatedBuildings[treeIndex],\n                stats: {\n                  ...updatedBuildings[treeIndex].stats,\n                  treesPlanted: (updatedBuildings[treeIndex].stats?.treesPlanted || 0) + treesPlanted\n                }\n              };\n            }\n          }\n          \n          return {\n            ...prevState,\n            buildings: updatedBuildings,\n            resources: {\n              ...prevState.resources,\n              ecoPoints: prevState.resources.ecoPoints + pointsPerSecond,\n            },\n            stats: {\n              ...prevState.stats,\n              totalEcoPoints: prevState.stats.totalEcoPoints + pointsPerSecond,\n              treesPlanted: prevState.stats.treesPlanted + treesPlanted,\n              co2Reduced: prevState.stats.co2Reduced + co2ToReduce,\n            },\n          };\n        });\n      }, 1000);\n      \n      return () => clearInterval(timer);\n    }\n  }, [gameState.buildings, gameState.multipliers]);\n\n  // Notification management - auto-remove after 5 seconds\n  useEffect(() => {\n    if (gameState.notifications.length > 0) {\n      const timer = setTimeout(() => {\n        setGameState(prevState => ({\n          ...prevState,\n          notifications: prevState.notifications.slice(1), // Remove the oldest notification\n        }));\n      }, 5000);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [gameState.notifications]);\n\n  // Check for newly unlocked buildings and achievements\n  useEffect(() => {\n    let hasChanges = false;\n    const newState = { ...gameState };\n    const newNotifications = [...gameState.notifications];\n\n    // Check for buildings to unlock\n    newState.buildings = gameState.buildings.map(building => {\n      if (!building.unlocked && building.unlockAt && gameState.resources.ecoPoints >= building.unlockAt) {\n        hasChanges = true;\n        // Add notification for unlocked building\n        newNotifications.push({\n          id: `building-${building.id}`,\n          type: 'building',\n          title: 'New Building Unlocked!',\n          message: `${building.name} (${building.icon}) is now available for purchase!`,\n          icon: building.icon,\n        });\n        return { ...building, unlocked: true };\n      }\n      return building;\n    });\n\n    // Check for achievements to unlock\n    newState.achievements = gameState.achievements.map(achievement => {\n      if (!achievement.unlocked && checkAchievementCondition(achievement, gameState)) {\n        hasChanges = true;\n        // Add notification for unlocked achievement\n        newNotifications.push({\n          id: `achievement-${achievement.id}`,\n          type: 'achievement',\n          title: 'Achievement Unlocked!',\n          message: `${achievement.name}: ${achievement.description}`,\n          condition: achievement.conditionText,\n          icon: achievement.icon,\n        });\n        return { ...achievement, unlocked: true };\n      }\n      return achievement;\n    });\n\n    if (hasChanges) {\n      setGameState({\n        ...newState,\n        notifications: newNotifications,\n      });\n    }\n  }, [gameState.resources, gameState.stats, gameState.buildings]);\n\n  // Handle clicking on the main clicker area\n  const handleClick = () => {\n    const clickValue = calculateClickValue(gameState.buildings, gameState.multipliers);\n    \n    // CO2 reduction is still based on all eco points (0.05kg per point)\n    const co2ToReduce = clickValue * 0.05;\n    \n    setGameState(prevState => ({\n      ...prevState,\n      resources: {\n        ...prevState.resources,\n        ecoPoints: prevState.resources.ecoPoints + clickValue,\n      },\n      stats: {\n        ...prevState.stats,\n        totalClicks: prevState.stats.totalClicks + 1,\n        totalEcoPoints: prevState.stats.totalEcoPoints + clickValue,\n        // No trees planted from clicking - only from Tree Plantation building\n        co2Reduced: prevState.stats.co2Reduced + co2ToReduce,\n      },\n    }));\n  };\n\n  // Handle purchasing a building\n  const purchaseBuilding = (buildingId) => {\n    const buildingIndex = gameState.buildings.findIndex(b => b.id === buildingId);\n    \n    if (buildingIndex === -1) return false;\n    \n    const building = gameState.buildings[buildingIndex];\n    \n    // Check if we can purchase this building\n    if (building.level >= building.maxLevel) return false;\n    \n    // Use the updated cost calculation that includes prestige level\n    const cost = calculateBuildingCost(building.baseCost, building.level, building.prestigeLevel);\n    \n    if (gameState.resources.ecoPoints < cost) return false;\n    \n    const newBuildings = [...gameState.buildings];\n    newBuildings[buildingIndex] = {\n      ...building,\n      level: building.level + 1,\n    };\n    \n    // Update multipliers if it's a multiplier building\n    let newMultipliers = { ...gameState.multipliers };\n    if (building.type === 'multiplier') {\n      const prestigeBonus = 1 + (building.prestigeLevel * PRESTIGE_BONUS);\n      const effectValue = building.baseEffect * prestigeBonus;\n      \n      newMultipliers = {\n        clickMultiplier: gameState.multipliers.clickMultiplier + effectValue,\n        passiveMultiplier: gameState.multipliers.passiveMultiplier + effectValue,\n      };\n    }\n    \n    setGameState(prevState => ({\n      ...prevState,\n      resources: {\n        ...prevState.resources,\n        ecoPoints: prevState.resources.ecoPoints - cost,\n      },\n      buildings: newBuildings,\n      multipliers: newMultipliers,\n    }));\n    \n    return true;\n  };\n\n  // Handle prestiging a building\n  const prestigeBuilding = (buildingId) => {\n    const buildingIndex = gameState.buildings.findIndex(b => b.id === buildingId);\n    \n    if (buildingIndex === -1) return false;\n    \n    const building = gameState.buildings[buildingIndex];\n    \n    // Can only prestige if building is at max level\n    if (building.level < building.maxLevel) return false;\n    \n    const newBuildings = [...gameState.buildings];\n    newBuildings[buildingIndex] = {\n      ...building,\n      level: 0, // Reset level\n      prestigeLevel: building.prestigeLevel + 1, // Increase prestige level\n    };\n    \n    // Reset multipliers if it's a multiplier building\n    let newMultipliers = { ...gameState.multipliers };\n    if (building.type === 'multiplier') {\n      // Remove old effect and add new effect with prestige bonus\n      const oldEffect = building.baseEffect * building.level;\n      const newPrestigeBonus = 1 + ((building.prestigeLevel + 1) * PRESTIGE_BONUS);\n      \n      newMultipliers = {\n        clickMultiplier: gameState.multipliers.clickMultiplier - oldEffect,\n        passiveMultiplier: gameState.multipliers.passiveMultiplier - oldEffect,\n      };\n    }\n    \n    // Add notification for prestige\n    const newNotifications = [...gameState.notifications];\n    newNotifications.push({\n      id: `prestige-${building.id}-${Date.now()}`,\n      type: 'prestige',\n      title: 'Building Prestiged!',\n      message: `${building.name} has been prestiged to level ${building.prestigeLevel + 1}!`,\n      icon: '🌟',\n    });\n    \n    setGameState(prevState => ({\n      ...prevState,\n      buildings: newBuildings,\n      multipliers: newMultipliers,\n      stats: {\n        ...prevState.stats,\n        totalPrestiges: prevState.stats.totalPrestiges + 1,\n      },\n      notifications: newNotifications,\n    }));\n    \n    return true;\n  };\n\n  // Function to add cheat points - memoized to prevent unnecessary re-renders\n  const addCheatPoints = useCallback((points) => {\n    if (!isNaN(points) && points > 0) {\n      setGameState(prevState => ({\n        ...prevState,\n        resources: {\n          ...prevState.resources,\n          ecoPoints: prevState.resources.ecoPoints + points,\n        },\n        stats: {\n          ...prevState.stats,\n          totalEcoPoints: prevState.stats.totalEcoPoints + points,\n        },\n      }));\n    }\n  }, []);\n\n  // Reset the game\n  const resetGame = () => {\n    if (window.confirm('Are you sure you want to reset your progress? This cannot be undone.')) {\n      // Clear all game data from localStorage\n      localStorage.removeItem('ecoClickerSave');\n      // Reset to initial state\n      setGameState(initialState);\n    }\n  };\n\n  return {\n    gameState,\n    handleClick,\n    purchaseBuilding,\n    prestigeBuilding,\n    resetGame,\n    pointsPerSecond: calculatePointsPerSecond(gameState.buildings, gameState.multipliers),\n    clickValue: calculateClickValue(gameState.buildings, gameState.multipliers),\n    getBuildingCost: (buildingId) => {\n      const building = gameState.buildings.find(b => b.id === buildingId);\n      if (!building) return null;\n      return calculateBuildingCost(building.baseCost, building.level, building.prestigeLevel);\n    },\n    checkCanPrestige: (buildingId) => {\n      const building = gameState.buildings.find(b => b.id === buildingId);\n      if (!building) return false;\n      return building.level >= building.maxLevel;\n    },\n    getPrestigeBonus: (buildingId) => {\n      // Return the hardcoded prestige bonus value instead of reading from building object\n      return PRESTIGE_BONUS;\n    },\n    addCheatPoints,\n  };\n};\n\nexport default useGameState;","import { useState, useEffect, useRef, useCallback } from 'react';\n\n// Import audio files as URLs\nimport backgroundMusic from '../../assets/ambient_music.mp3';\nimport buySound from '../../assets/buy.mp3';\nimport prestigeSound from '../../assets/prestige.mp3';\nimport achievementSound from '../../assets/achievement.mp3';\nimport notificationSound from '../../assets/notification.mp3';\n\n// Define audio files map with imported URLs\nconst AUDIO_FILES = {\n  background: backgroundMusic,\n  buy: buySound,\n  prestige: prestigeSound,\n  achievement: achievementSound,\n  notification: notificationSound\n};\n\nconst useAudio = () => {\n  // Audio elements refs\n  const bgMusicRef = useRef(null);\n  const buySoundRef = useRef(null);\n  const prestigeSoundRef = useRef(null);\n  const achievementSoundRef = useRef(null);\n  const notificationSoundRef = useRef(null);\n  \n  // State for audio settings\n  const [audioSettings, setAudioSettings] = useState(() => {\n    const savedSettings = localStorage.getItem('ecoClickerAudioSettings');\n    if (savedSettings) {\n      try {\n        return JSON.parse(savedSettings);\n      } catch (error) {\n        console.error('Failed to parse audio settings:', error);\n      }\n    }\n    return {\n      masterVolume: 0.7,\n      musicVolume: 0.5,\n      sfxVolume: 0.8,\n      musicEnabled: true,\n      sfxEnabled: true,\n    };\n  });\n\n  // Initialize audio elements\n  useEffect(() => {\n    // Create audio elements with proper imports\n    bgMusicRef.current = new Audio(AUDIO_FILES.background);\n    bgMusicRef.current.loop = true;\n    bgMusicRef.current.volume = audioSettings.musicEnabled ? (audioSettings.masterVolume * audioSettings.musicVolume) : 0;\n    \n    buySoundRef.current = new Audio(AUDIO_FILES.buy);\n    buySoundRef.current.volume = audioSettings.sfxEnabled ? (audioSettings.masterVolume * audioSettings.sfxVolume) : 0;\n    \n    prestigeSoundRef.current = new Audio(AUDIO_FILES.prestige);\n    prestigeSoundRef.current.volume = audioSettings.sfxEnabled ? (audioSettings.masterVolume * audioSettings.sfxVolume) : 0;\n    \n    achievementSoundRef.current = new Audio(AUDIO_FILES.achievement);\n    achievementSoundRef.current.volume = audioSettings.sfxEnabled ? (audioSettings.masterVolume * audioSettings.sfxVolume) : 0;\n    \n    notificationSoundRef.current = new Audio(AUDIO_FILES.notification);\n    notificationSoundRef.current.volume = audioSettings.sfxEnabled ? (audioSettings.masterVolume * audioSettings.sfxVolume) : 0;\n    \n    // Start playing background music if enabled\n    if (audioSettings.musicEnabled) {\n      bgMusicRef.current.play().catch(error => {\n        console.warn('Autoplay prevented. User interaction needed to start audio:', error);\n      });\n    }\n    \n    // Cleanup\n    return () => {\n      if (bgMusicRef.current) bgMusicRef.current.pause();\n    };\n  }, []);\n\n  // Update volumes when settings change\n  useEffect(() => {\n    if (bgMusicRef.current) {\n      bgMusicRef.current.volume = audioSettings.musicEnabled ? \n        (audioSettings.masterVolume * audioSettings.musicVolume) : 0;\n    }\n    \n    if (buySoundRef.current) {\n      buySoundRef.current.volume = audioSettings.sfxEnabled ? \n        (audioSettings.masterVolume * audioSettings.sfxVolume) : 0;\n    }\n    \n    if (prestigeSoundRef.current) {\n      prestigeSoundRef.current.volume = audioSettings.sfxEnabled ? \n        (audioSettings.masterVolume * audioSettings.sfxVolume) : 0;\n    }\n    \n    if (achievementSoundRef.current) {\n      achievementSoundRef.current.volume = audioSettings.sfxEnabled ? \n        (audioSettings.masterVolume * audioSettings.sfxVolume) : 0;\n    }\n    \n    if (notificationSoundRef.current) {\n      notificationSoundRef.current.volume = audioSettings.sfxEnabled ? \n        (audioSettings.masterVolume * audioSettings.sfxVolume) : 0;\n    }\n    \n    // Save settings to localStorage\n    localStorage.setItem('ecoClickerAudioSettings', JSON.stringify(audioSettings));\n  }, [audioSettings]);\n\n  // Function to play a sound\n  const playSound = useCallback((soundType) => {\n    if (!audioSettings.sfxEnabled) return;\n    \n    switch (soundType) {\n      case 'buy':\n        if (buySoundRef.current) {\n          buySoundRef.current.currentTime = 0;\n          buySoundRef.current.play().catch(e => console.warn('Error playing sound:', e));\n        }\n        break;\n      case 'prestige':\n        if (prestigeSoundRef.current) {\n          prestigeSoundRef.current.currentTime = 0;\n          prestigeSoundRef.current.play().catch(e => console.warn('Error playing sound:', e));\n        }\n        break;\n      case 'achievement':\n        if (achievementSoundRef.current) {\n          achievementSoundRef.current.currentTime = 0;\n          achievementSoundRef.current.play().catch(e => console.warn('Error playing sound:', e));\n        }\n        break;\n      case 'notification':\n        if (notificationSoundRef.current) {\n          notificationSoundRef.current.currentTime = 0;\n          notificationSoundRef.current.play().catch(e => console.warn('Error playing sound:', e));\n        }\n        break;\n      default:\n        break;\n    }\n  }, [audioSettings.sfxEnabled]);\n\n  // Toggle background music\n  const toggleMusic = useCallback(() => {\n    setAudioSettings(prev => {\n      const newSettings = { ...prev, musicEnabled: !prev.musicEnabled };\n      \n      if (bgMusicRef.current) {\n        if (newSettings.musicEnabled) {\n          bgMusicRef.current.play().catch(e => console.warn('Error playing music:', e));\n        } else {\n          bgMusicRef.current.pause();\n        }\n      }\n      \n      return newSettings;\n    });\n  }, []);\n\n  // Toggle sound effects\n  const toggleSFX = useCallback(() => {\n    setAudioSettings(prev => ({ ...prev, sfxEnabled: !prev.sfxEnabled }));\n  }, []);\n\n  // Update music volume\n  const updateMusicVolume = useCallback((value) => {\n    setAudioSettings(prev => ({ ...prev, musicVolume: value }));\n  }, []);\n\n  // Update SFX volume\n  const updateSFXVolume = useCallback((value) => {\n    setAudioSettings(prev => ({ ...prev, sfxVolume: value }));\n  }, []);\n\n  // Update master volume\n  const updateMasterVolume = useCallback((value) => {\n    setAudioSettings(prev => ({ ...prev, masterVolume: value }));\n  }, []);\n\n  return {\n    audioSettings,\n    playSound,\n    toggleMusic,\n    toggleSFX,\n    updateMusicVolume,\n    updateSFXVolume,\n    updateMasterVolume,\n  };\n};\n\nexport default useAudio;","import React, { useState, useEffect, useCallback, memo, useMemo, useRef } from 'react';\nimport { \n  StyleSheet, \n  View, \n  Text, \n  SafeAreaView, \n  ScrollView, \n  StatusBar,\n  TouchableOpacity,\n  Modal,\n  Animated,\n  FlatList,\n  TextInput,\n  Switch\n} from 'react-native';\n\n// Import components\nimport ClickArea from './components/ClickArea';\nimport Buildings from './components/Buildings';\nimport Stats from './components/Stats';\n\n// Import game state hook\nimport useGameState from './hooks/useGameState';\n// Import audio hook\nimport useAudio from './hooks/useAudio';\n\n// Create a simple slider component since Slider is not available in React Native Web\nconst CustomSlider = ({ value, minimumValue, maximumValue, onValueChange, disabled, minimumTrackTintColor, maximumTrackTintColor, thumbTintColor }) => {\n  return (\n    <input\n      type=\"range\"\n      min={minimumValue || 0}\n      max={maximumValue || 1}\n      step={0.01}\n      value={value}\n      onChange={(e) => onValueChange(parseFloat(e.target.value))}\n      disabled={disabled}\n      style={{ \n        flex: 2,\n        accentColor: minimumTrackTintColor || '#4CAF50',\n        opacity: disabled ? 0.5 : 1\n      }}\n    />\n  );\n};\n\nconst App = () => {\n  const {\n    gameState,\n    handleClick,\n    purchaseBuilding,\n    prestigeBuilding,\n    resetGame,\n    pointsPerSecond,\n    clickValue,\n    getBuildingCost,\n    checkCanPrestige,\n    getPrestigeBonus,\n    addCheatPoints\n  } = useGameState();\n\n  // Initialize audio system\n  const {\n    audioSettings,\n    playSound,\n    toggleMusic,\n    toggleSFX,\n    updateMusicVolume,\n    updateSFXVolume,\n    updateMasterVolume\n  } = useAudio();\n\n  const [activeTab, setActiveTab] = useState('buildings');\n  const [infoModalVisible, setInfoModalVisible] = useState(false);\n  const [cheatMenuVisible, setCheatMenuVisible] = useState(false);\n  const [settingsModalVisible, setSettingsModalVisible] = useState(false);\n  const [pointsToAdd, setPointsToAdd] = useState('1000');\n  \n  // Memoize functions that will be passed to modals to prevent re-renders\n  const handleCloseInfoModal = useCallback(() => setInfoModalVisible(false), []);\n  const handleCloseCheatMenu = useCallback(() => setCheatMenuVisible(false), []);\n  const handleCloseSettingsModal = useCallback(() => setSettingsModalVisible(false), []);\n  \n  const handleCheatPoints = useCallback(() => {\n    const points = parseInt(pointsToAdd, 10);\n    if (!isNaN(points) && points > 0) {\n      addCheatPoints(points);\n      setCheatMenuVisible(false);\n    }\n  }, [pointsToAdd, addCheatPoints]);\n  \n  // Custom click handler that integrates sound\n  const handleGameClick = useCallback(() => {\n    handleClick();\n    // No sound on click to avoid too frequent sound playing\n  }, [handleClick]);\n\n  // Custom building purchase handler that integrates sound\n  const handleBuildingPurchase = useCallback((buildingId) => {\n    const success = purchaseBuilding(buildingId);\n    if (success) {\n      playSound('buy');\n    }\n    return success;\n  }, [purchaseBuilding, playSound]);\n\n  // Custom building prestige handler that integrates sound\n  const handleBuildingPrestige = useCallback((buildingId) => {\n    const success = prestigeBuilding(buildingId);\n    if (success) {\n      playSound('prestige');\n    }\n    return success;\n  }, [prestigeBuilding, playSound]);\n  \n  // Create a ref to track played notification sounds\n  const playedNotificationsRef = useRef(new Set());\n  \n  // Combined effect to handle all notification sounds in one place\n  useEffect(() => {\n    // Only play sound when a new notification is added (not when one is removed)\n    const notificationCount = gameState.notifications.length;\n    \n    if (notificationCount > 0) {\n      // Get the most recent notification\n      const latestNotification = gameState.notifications[notificationCount - 1];\n      \n      // Use a unique ID to make sure we don't play sounds for the same notification twice\n      const notificationId = latestNotification.id;\n      \n      // Only play if we haven't played this notification before\n      if (!playedNotificationsRef.current.has(notificationId)) {\n        // Play different sounds based on notification type\n        if (latestNotification.type === 'achievement') {\n          playSound('achievement');\n        } else if (latestNotification.type === 'prestige') {\n          playSound('prestige');\n        } else {\n          // For building unlocks and other general notifications\n          playSound('notification');\n        }\n        \n        // Mark this notification as played\n        playedNotificationsRef.current.add(notificationId);\n        \n        // Clean up old notification IDs to prevent memory leaks\n        if (playedNotificationsRef.current.size > 20) {\n          const oldestIds = Array.from(playedNotificationsRef.current).slice(0, 10);\n          oldestIds.forEach(id => playedNotificationsRef.current.delete(id));\n        }\n      }\n    }\n  }, [gameState.notifications.length, playSound]);\n  \n  // Function to handle key press for cheat code\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      // Check if the pressed key is '²' (keyCode 178)\n      if (event.key === '²') {\n        setCheatMenuVisible(true);\n      }\n    };\n    \n    window.addEventListener('keydown', handleKeyDown);\n    \n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  // Function to format large numbers with K, M, B suffixes\n  const formatNumber = useCallback((num) => {\n    if (num < 1000) return Math.floor(num).toString();\n    if (num < 1000000) return (Math.floor(num / 100) / 10).toFixed(1) + 'K';\n    if (num < 1000000000) return (Math.floor(num / 100000) / 10).toFixed(1) + 'M';\n    return (Math.floor(num / 100000000) / 10).toFixed(1) + 'B';\n  }, []);\n\n  // Notification component\n  const NotificationSystem = useCallback(() => {\n    if (gameState.notifications.length === 0) return null;\n    \n    const renderNotification = ({ item }) => {\n      let bgColor = '#4CAF50'; // default green\n      let iconColor = '#E8F5E9';\n      \n      // Different styles for different notification types\n      if (item.type === 'achievement') {\n        bgColor = '#FFC107'; // amber\n        iconColor = '#FFF9C4';\n      } else if (item.type === 'prestige') {\n        bgColor = '#FF9800'; // orange\n        iconColor = '#FFF3E0';\n      }\n      \n      return (\n        <Animated.View style={[styles.notification, { backgroundColor: bgColor }]}>\n          <View style={[styles.notificationIconContainer, { backgroundColor: iconColor }]}>\n            <Text style={styles.notificationIcon}>{item.icon}</Text>\n          </View>\n          <View style={styles.notificationContent}>\n            <Text style={styles.notificationTitle}>{item.title}</Text>\n            <Text style={styles.notificationMessage}>{item.message}</Text>\n            {item.condition && (\n              <Text style={styles.notificationCondition}>\n                Condition: {item.condition}\n              </Text>\n            )}\n          </View>\n        </Animated.View>\n      );\n    };\n    \n    return (\n      <View style={styles.notificationsContainer}>\n        <FlatList\n          data={gameState.notifications}\n          renderItem={renderNotification}\n          keyExtractor={(item) => item.id}\n          contentContainerStyle={styles.notificationsList}\n        />\n      </View>\n    );\n  }, [gameState.notifications]);\n\n  const renderTabContent = useCallback(() => {\n    switch (activeTab) {\n      case 'buildings':\n        return (\n          <Buildings\n            buildings={gameState.buildings}\n            ecoPoints={gameState.resources.ecoPoints}\n            onPurchase={handleBuildingPurchase}\n            prestigeBuilding={handleBuildingPrestige}\n            checkCanPrestige={checkCanPrestige}\n            getPrestigeBonus={getPrestigeBonus}\n            getBuildingCost={getBuildingCost}\n          />\n        );\n      case 'stats':\n        return (\n          <Stats\n            stats={gameState.stats}\n            resources={gameState.resources}\n            pointsPerSecond={pointsPerSecond}\n            achievements={gameState.achievements}\n          />\n        );\n      default:\n        return <Buildings />;\n    }\n  }, [activeTab, gameState.buildings, gameState.resources.ecoPoints, gameState.stats, \n      gameState.resources, pointsPerSecond, gameState.achievements, handleBuildingPurchase, \n      handleBuildingPrestige, checkCanPrestige, getPrestigeBonus, getBuildingCost]);\n\n  // Completely memoize the modal components to prevent re-renders\n  const InfoModal = useMemo(() => (\n    <Modal\n      animationType=\"none\"\n      transparent={true}\n      visible={infoModalVisible}\n      onRequestClose={handleCloseInfoModal}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>About EcoClicker</Text>\n          \n          <ScrollView style={styles.modalScrollView}>\n            <Text style={styles.sectionTitle}>How to Play</Text>\n            <Text style={styles.modalText}>\n              Click the Earth to generate eco points. Use your points to purchase buildings that \n              will help you generate more points automatically or increase your click value.\n            </Text>\n            \n            <Text style={styles.sectionTitle}>Ecological Impact</Text>\n            <Text style={styles.modalText}>\n              While EcoClicker is just a game, it aims to raise awareness about ecological issues. \n              Each building represents real-world actions we can take to help our planet.\n            </Text>\n            \n            <Text style={styles.sectionTitle}>Eco Facts</Text>\n            <View style={styles.factContainer}>\n              <Text style={styles.factTitle}>🌳 Trees</Text>\n              <Text style={styles.factText}>\n                A single mature tree can absorb up to 48 pounds of carbon dioxide per year.\n              </Text>\n            </View>\n            \n            <View style={styles.factContainer}>\n              <Text style={styles.factTitle}>☀️ Solar Energy</Text>\n              <Text style={styles.factText}>\n                The sunlight that hits the Earth's surface in just one hour could power the entire world for a year.\n              </Text>\n            </View>\n            \n            <View style={styles.factContainer}>\n              <Text style={styles.factTitle}>♻️ Recycling</Text>\n              <Text style={styles.factText}>\n                Recycling one aluminum can saves enough energy to run a TV for three hours.\n              </Text>\n            </View>\n            \n            <View style={styles.factContainer}>\n              <Text style={styles.factTitle}>🌬️ Wind Energy</Text>\n              <Text style={styles.factText}>\n                Wind turbines can reduce carbon dioxide emissions by 2,000 tons per year compared to fossil fuels.\n              </Text>\n            </View>\n          </ScrollView>\n          \n          <TouchableOpacity\n            style={styles.closeButton}\n            onPress={handleCloseInfoModal}\n          >\n            <Text style={styles.closeButtonText}>Close</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  ), [infoModalVisible, handleCloseInfoModal]);\n\n  // Memoize the cheat menu\n  const CheatMenu = useMemo(() => (\n    <Modal\n      animationType=\"none\"\n      transparent={true}\n      visible={cheatMenuVisible}\n      onRequestClose={handleCloseCheatMenu}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Cheat Menu</Text>\n          \n          <View style={styles.cheatOption}>\n            <Text style={styles.cheatLabel}>Add EcoPoints:</Text>\n            <TextInput\n              style={styles.cheatInput}\n              value={pointsToAdd}\n              onChangeText={setPointsToAdd}\n              keyboardType=\"numeric\"\n            />\n          </View>\n          \n          <View style={styles.cheatButtonsRow}>\n            <TouchableOpacity\n              style={styles.cheatButton}\n              onPress={handleCheatPoints}\n            >\n              <Text style={styles.cheatButtonText}>Add Points</Text>\n            </TouchableOpacity>\n            \n            <TouchableOpacity\n              style={[styles.cheatButton, styles.cancelButton]}\n              onPress={handleCloseCheatMenu}\n            >\n              <Text style={styles.cheatButtonText}>Close</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  ), [cheatMenuVisible, handleCloseCheatMenu, pointsToAdd, handleCheatPoints]);\n\n  // Settings modal for audio controls\n  const SettingsModal = useMemo(() => (\n    <Modal\n      animationType=\"none\"\n      transparent={true}\n      visible={settingsModalVisible}\n      onRequestClose={handleCloseSettingsModal}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Settings</Text>\n          \n          <View style={styles.settingsSection}>\n            <Text style={styles.sectionTitle}>Audio</Text>\n            \n            <View style={styles.settingRow}>\n              <Text style={styles.settingLabel}>Master Volume</Text>\n              <CustomSlider\n                value={audioSettings.masterVolume}\n                minimumValue={0}\n                maximumValue={1}\n                onValueChange={updateMasterVolume}\n                minimumTrackTintColor=\"#4CAF50\"\n                maximumTrackTintColor=\"#D8D8D8\"\n                thumbTintColor=\"#2E7D32\"\n              />\n              <Text style={styles.volumeValue}>{Math.round(audioSettings.masterVolume * 100)}%</Text>\n            </View>\n            \n            <View style={styles.settingRow}>\n              <Text style={styles.settingLabel}>Music Volume</Text>\n              <CustomSlider\n                value={audioSettings.musicVolume}\n                minimumValue={0}\n                maximumValue={1}\n                onValueChange={updateMusicVolume}\n                minimumTrackTintColor=\"#4CAF50\"\n                maximumTrackTintColor=\"#D8D8D8\"\n                thumbTintColor=\"#2E7D32\"\n                disabled={!audioSettings.musicEnabled}\n              />\n              <Text style={styles.volumeValue}>{Math.round(audioSettings.musicVolume * 100)}%</Text>\n            </View>\n            \n            <View style={styles.settingRow}>\n              <Text style={styles.settingLabel}>Sound Effects Volume</Text>\n              <CustomSlider\n                value={audioSettings.sfxVolume}\n                minimumValue={0}\n                maximumValue={1}\n                onValueChange={updateSFXVolume}\n                minimumTrackTintColor=\"#4CAF50\"\n                maximumTrackTintColor=\"#D8D8D8\"\n                thumbTintColor=\"#2E7D32\"\n                disabled={!audioSettings.sfxEnabled}\n              />\n              <Text style={styles.volumeValue}>{Math.round(audioSettings.sfxVolume * 100)}%</Text>\n            </View>\n            \n            <View style={styles.settingRow}>\n              <Text style={styles.settingLabel}>Enable Music</Text>\n              <Switch\n                trackColor={{ false: \"#D8D8D8\", true: \"#81C784\" }}\n                thumbColor={audioSettings.musicEnabled ? \"#4CAF50\" : \"#f4f3f4\"}\n                ios_backgroundColor=\"#D8D8D8\"\n                onValueChange={toggleMusic}\n                value={audioSettings.musicEnabled}\n              />\n            </View>\n            \n            <View style={styles.settingRow}>\n              <Text style={styles.settingLabel}>Enable Sound Effects</Text>\n              <Switch\n                trackColor={{ false: \"#D8D8D8\", true: \"#81C784\" }}\n                thumbColor={audioSettings.sfxEnabled ? \"#4CAF50\" : \"#f4f3f4\"}\n                ios_backgroundColor=\"#D8D8D8\"\n                onValueChange={toggleSFX}\n                value={audioSettings.sfxEnabled}\n              />\n            </View>\n          </View>\n          \n          <TouchableOpacity\n            style={styles.closeButton}\n            onPress={handleCloseSettingsModal}\n          >\n            <Text style={styles.closeButtonText}>Close</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  ), [\n    settingsModalVisible, \n    handleCloseSettingsModal, \n    audioSettings, \n    updateMasterVolume, \n    updateMusicVolume, \n    updateSFXVolume, \n    toggleMusic, \n    toggleSFX\n  ]);\n\n  return (\n    <SafeAreaView style={styles.safeArea}>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"#E8F5E9\" />\n      \n      <View style={styles.header}>\n        <Text style={styles.title}>EcoClicker</Text>\n        <View style={styles.headerButtons}>\n          <TouchableOpacity \n            style={styles.headerButton} \n            onPress={() => setSettingsModalVisible(true)}\n          >\n            <Text style={styles.headerButtonText}>⚙️</Text>\n          </TouchableOpacity>\n          <TouchableOpacity \n            style={styles.headerButton} \n            onPress={() => setInfoModalVisible(true)}\n          >\n            <Text style={styles.headerButtonText}>ℹ️</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n      \n      <NotificationSystem />\n      \n      <ClickArea \n        onPress={handleGameClick} \n        clickValue={clickValue} \n        ecoPoints={gameState.resources.ecoPoints}\n        pointsPerSecond={pointsPerSecond}\n        formatNumber={formatNumber}\n        buildings={gameState.buildings}\n      />\n      \n      <View style={styles.tabBar}>\n        <TouchableOpacity\n          style={[styles.tab, activeTab === 'buildings' && styles.activeTab]}\n          onPress={() => setActiveTab('buildings')}\n        >\n          <Text style={[styles.tabText, activeTab === 'buildings' && styles.activeTabText]}>Buildings</Text>\n        </TouchableOpacity>\n        \n        <TouchableOpacity\n          style={[styles.tab, activeTab === 'stats' && styles.activeTab]}\n          onPress={() => setActiveTab('stats')}\n        >\n          <Text style={[styles.tabText, activeTab === 'stats' && styles.activeTabText]}>Stats</Text>\n        </TouchableOpacity>\n      </View>\n      \n      <View style={styles.contentContainer}>\n        {renderTabContent()}\n      </View>\n      \n      <View style={styles.footer}>\n        <TouchableOpacity style={styles.resetButton} onPress={resetGame}>\n          <Text style={styles.resetButtonText}>Reset Game</Text>\n        </TouchableOpacity>\n      </View>\n      \n      {InfoModal}\n      {CheatMenu}\n      {SettingsModal}\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n    backgroundColor: '#F1F8E9',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#4CAF50',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  headerButtons: {\n    flexDirection: 'row',\n  },\n  headerButton: {\n    marginLeft: 10,\n  },\n  headerButtonText: {\n    fontSize: 24,\n  },\n  tabBar: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: '#81C784',\n  },\n  tab: {\n    flex: 1,\n    paddingVertical: 10,\n    alignItems: 'center',\n  },\n  activeTab: {\n    borderBottomWidth: 3,\n    borderBottomColor: '#4CAF50',\n  },\n  tabText: {\n    fontSize: 16,\n    color: '#689F38',\n  },\n  activeTabText: {\n    fontWeight: 'bold',\n    color: '#2E7D32',\n  },\n  contentContainer: {\n    flex: 1,\n    padding: 10,\n  },\n  footer: {\n    padding: 10,\n    alignItems: 'center',\n    borderTopWidth: 1,\n    borderTopColor: '#E0E0E0',\n  },\n  resetButton: {\n    padding: 10,\n  },\n  resetButtonText: {\n    color: '#BF360C',\n    fontSize: 14,\n  },\n  modalOverlay: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    position: 'fixed', // Add fixed position for modals\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 1100, // Higher z-index than notifications\n  },\n  modalContent: {\n    width: '90%',\n    maxHeight: '80%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    alignItems: 'center',\n    zIndex: 1200, // Even higher z-index\n  },\n  notificationsContainer: {\n    position: 'fixed',\n    top: 70, // Position below the header\n    right: 10, // Changed from left to right\n    zIndex: 1000, // Ensure it's above everything else\n    maxWidth: '80%',\n    maxHeight: 500,\n    // Removed duplicate position: fixed property\n  },\n  notificationsList: {\n    // No horizontal padding needed since we have left margin\n  },\n  notification: {\n    flexDirection: 'row',\n    borderRadius: 8,\n    padding: 10,\n    marginVertical: 5,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.3,\n    shadowRadius: 3,\n    elevation: 4,\n  },\n  notificationIconContainer: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 10,\n  },\n  notificationIcon: {\n    fontSize: 20,\n  },\n  notificationContent: {\n    flex: 1,\n  },\n  notificationTitle: {\n    fontWeight: 'bold',\n    color: 'white',\n    fontSize: 16,\n  },\n  notificationMessage: {\n    color: 'white',\n    fontSize: 14,\n  },\n  notificationCondition: {\n    color: 'rgba(255, 255, 255, 0.8)',\n    fontSize: 12,\n    fontStyle: 'italic',\n    marginTop: 2,\n  },\n  cheatOption: {\n    marginBottom: 15,\n    width: '100%',\n  },\n  cheatLabel: {\n    fontSize: 16,\n    color: '#333',\n    marginBottom: 5,\n  },\n  cheatInput: {\n    borderWidth: 1,\n    borderColor: '#CCC',\n    borderRadius: 5,\n    padding: 10,\n    fontSize: 16,\n    width: '100%',\n  },\n  cheatButtonsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  cheatButton: {\n    backgroundColor: '#4CAF50',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5,\n    marginHorizontal: 5,\n  },\n  cheatButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  cancelButton: {\n    backgroundColor: '#F44336',\n  },\n  modalTitle: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#2E7D32',\n    marginBottom: 15,\n    textAlign: 'center',\n  },\n  modalScrollView: {\n    width: '100%',\n    maxHeight: 400,\n    marginBottom: 15,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#388E3C',\n    marginTop: 15,\n    marginBottom: 8,\n  },\n  modalText: {\n    fontSize: 16,\n    color: '#333',\n    marginBottom: 10,\n    lineHeight: 22,\n  },\n  factContainer: {\n    backgroundColor: '#E8F5E9',\n    borderRadius: 8,\n    padding: 12,\n    marginVertical: 8,\n    width: '100%',\n  },\n  factTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#2E7D32',\n    marginBottom: 5,\n  },\n  factText: {\n    fontSize: 14,\n    color: '#333',\n    lineHeight: 20,\n  },\n  closeButton: {\n    backgroundColor: '#4CAF50',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5,\n    marginTop: 10,\n  },\n  closeButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  settingsSection: {\n    width: '100%',\n  },\n  settingRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 15,\n  },\n  settingLabel: {\n    flex: 1,\n    fontSize: 16,\n    color: '#333',\n  },\n  slider: {\n    flex: 2,\n  },\n  volumeValue: {\n    flex: 1,\n    textAlign: 'right',\n    fontSize: 16,\n    color: '#333',\n  },\n});\n\nexport default App;","import { registerRootComponent } from 'expo';\nimport App from './src/App';\n\n// Register the main component\nregisterRootComponent(App);\n\nexport default App;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"./\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [190], () => (__webpack_require__(8879)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["styles","isWeb","webScale","StyleSheet","create","backgroundImage","width","alignItems","justifyContent","height","overflow","webBackgroundImage","marginHorizontal","backgroundImageStyle","opacity","resizeMode","position","top","container","padding","paddingTop","minHeight","backgroundColor","borderRadius","marginVertical","marginTop","webContainer","maxWidth","bannerContainer","marginBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","webBannerContainer","bannerTitle","fontSize","fontWeight","color","webBannerTitle","bannerText","textAlign","webBannerText","pointsDisplay","paddingVertical","paddingHorizontal","borderWidth","borderColor","webPointsDisplay","pointsValue","textShadowColor","textShadowOffset","textShadowRadius","webPointsValue","pointsLabel","webPointsLabel","clickButton","webClickButton","innerCircle","webInnerCircle","buttonText","webButtonText","buttonSubtext","webButtonSubtext","floatingText","zIndex","pointsPerSecondContainer","webPointsPerSecondContainer","pointsPerSecondValue","webPointsPerSecondValue","pointsPerSecondLabel","webPointsPerSecondLabel","valueText","webValueText","_ref","onPress","clickValue","ecoPoints","pointsPerSecond","formatNumber","buildings","_Dimensions$get","Dimensions","get","currentStyles","_useState","useState","_useState2","_slicedToArray","currentTipIndex","setCurrentTipIndex","_useState3","_useState4","isEcoEducationUnlocked","setIsEcoEducationUnlocked","useEffect","ecoEducation","find","building","id","unlocked","tipInterval","setInterval","prevIndex","carbonTips","length","clearInterval","_useState5","_useState6","animations","setAnimations","_useState7","_useState8","nextId","setNextId","_jsx","ImageBackground","source","require","style","imageStyle","children","_jsxs","View","Text","tip","map","anim","Animated","transform","translateX","x","translateY","value","TouchableOpacity","newAnim","Math","random","y","Value","Number","toFixed","concat","_toConsumableArray","parallel","timing","toValue","duration","useNativeDriver","start","filter","a","activeOpacity","flex","title","buildingsList","buildingItem","flexDirection","affordableBuilding","unaffordableBuilding","maxedBuilding","buildingIcon","marginRight","iconText","buildingInfo","buildingHeader","buildingName","buildingLevel","prestigeLevel","buildingDescription","prestigeBonus","buildingFooter","costText","affordableText","unaffordableText","maxedText","effectText","fontStyle","emptyContainer","emptyText","prestigeContainer","prestigeText","prestigeButton","alignSelf","prestigeButtonText","onPurchase","prestigeBuilding","checkCanPrestige","getPrestigeBonus","getBuildingCost","availableBuildings","ScrollView","cost","canAfford","maxLevel","level","canPrestige","currentPrestigeBonus","disabled","icon","name","description","type","baseEffect","clickEffect","statsContainer","flexWrap","statItem","minWidth","statValue","statLabel","divider","sectionTitle","impactContainer","impactItem","impactIcon","impactTextContainer","impactValue","impactLabel","achievementsContainer","maxHeight","achievementItem","lockedAchievement","achievementIcon","achievementInfo","achievementName","achievementDescription","lockedAchievementName","lockedAchievementDescription","stats","resources","achievements","unlockedAchievements","achievement","lockedAchievements","floor","totalClicks","totalEcoPoints","treesPlanted","co2Reduced","PRESTIGE_BONUS","initialState","carbonOffset","renewableEnergy","totalPrestiges","multipliers","clickMultiplier","passiveMultiplier","buildingsData","_objectSpread","achievementsData","notifications","settings","soundEnabled","particlesEnabled","lastSaved","calculateBuildingCost","baseCost","prestigedBaseCost","pow","calculatePointsPerSecond","reduce","sum","calculateClickValue","savedState","localStorage","getItem","parsedState","JSON","parse","initialBuilding","savedBuilding","b","undefined","initialAchievement","savedAchievement","error","console","removeItem","gameState","setGameState","saveGame","stateToSave","Date","toISOString","setItem","stringify","saveInterval","timer","prevState","treePlantation","co2ToReduce","updatedBuildings","_updatedBuildings$tre","treeIndex","findIndex","setTimeout","slice","clearTimeout","hasChanges","newState","newNotifications","unlockAt","push","message","conditionType","conditionValue","totalBuildings","conditionBuilding","checkAchievementCondition","condition","conditionText","addCheatPoints","useCallback","points","isNaN","handleClick","purchaseBuilding","buildingId","buildingIndex","newBuildings","newMultipliers","effectValue","oldEffect","now","resetGame","window","confirm","AUDIO_FILES","background","buy","prestige","notification","bgMusicRef","useRef","buySoundRef","prestigeSoundRef","achievementSoundRef","notificationSoundRef","savedSettings","masterVolume","musicVolume","sfxVolume","musicEnabled","sfxEnabled","audioSettings","setAudioSettings","current","Audio","loop","volume","play","catch","warn","pause","playSound","soundType","currentTime","e","toggleMusic","prev","newSettings","toggleSFX","updateMusicVolume","updateSFXVolume","updateMasterVolume","CustomSlider","minimumValue","maximumValue","onValueChange","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","min","max","step","onChange","parseFloat","target","accentColor","safeArea","header","headerButtons","headerButton","marginLeft","headerButtonText","tabBar","borderBottomWidth","borderBottomColor","tab","activeTab","tabText","activeTabText","contentContainer","footer","borderTopWidth","borderTopColor","resetButton","resetButtonText","modalOverlay","left","right","bottom","modalContent","notificationsContainer","notificationsList","notificationIconContainer","notificationIcon","notificationContent","notificationTitle","notificationMessage","notificationCondition","cheatOption","cheatLabel","cheatInput","cheatButtonsRow","cheatButton","cheatButtonText","cancelButton","modalTitle","modalScrollView","modalText","lineHeight","factContainer","factTitle","factText","closeButton","closeButtonText","settingsSection","settingRow","settingLabel","slider","volumeValue","_useGameState","useGameState","_useAudio","useAudio","setActiveTab","infoModalVisible","setInfoModalVisible","cheatMenuVisible","setCheatMenuVisible","settingsModalVisible","setSettingsModalVisible","_useState9","_useState10","pointsToAdd","setPointsToAdd","handleCloseInfoModal","handleCloseCheatMenu","handleCloseSettingsModal","handleCheatPoints","parseInt","handleGameClick","handleBuildingPurchase","success","handleBuildingPrestige","playedNotificationsRef","Set","notificationCount","latestNotification","notificationId","has","add","size","Array","from","forEach","delete","handleKeyDown","event","key","addEventListener","removeEventListener","num","toString","NotificationSystem","FlatList","data","renderItem","_ref2","item","bgColor","iconColor","keyExtractor","contentContainerStyle","renderTabContent","Buildings","Stats","InfoModal","useMemo","Modal","animationType","transparent","visible","onRequestClose","CheatMenu","TextInput","onChangeText","keyboardType","SettingsModal","round","Switch","trackColor","false","true","thumbColor","ios_backgroundColor","SafeAreaView","StatusBar","barStyle","ClickArea","registerRootComponent","App","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}