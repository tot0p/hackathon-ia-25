{"version":3,"file":"static/js/main.44494e23.js","mappings":"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","sources":["src/components/ClickArea.jsx","src/components/Buildings.jsx","src/components/Stats.jsx","src/hooks/useGameState.js","src/App.jsx","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Animated, Platform, Dimensions } from 'react-native';\n\nconst ClickArea = ({ onPress, clickValue, ecoPoints, pointsPerSecond, formatNumber }) => {\n  // Check if we're running on web\n  const isWeb = Platform.OS === 'web';\n  // Get screen dimensions to calculate responsive sizes\n  const { width, height } = Dimensions.get('window');\n\n  // Use the styles function with isWeb parameter\n  const currentStyles = styles(isWeb);\n\n  const [animations, setAnimations] = useState([]);\n  const [nextId, setNextId] = useState(0);\n\n  // Handle the click action\n  const handlePress = () => {\n    // Call the onPress from props\n    onPress();\n\n    // Create a new animation for visual feedback\n    const newAnim = {\n      id: nextId,\n      position: {\n        x: Math.random() * 80 - 40, // Random position near the click area\n        y: -20 - Math.random() * 30, // Start slightly above the click\n      },\n      opacity: new Animated.Value(1),\n      translateY: new Animated.Value(0),\n      value: `+${clickValue}`,\n    };\n\n    setNextId(nextId + 1);\n    setAnimations([...animations, newAnim]);\n\n    // Animate the point value floating up and fading\n    Animated.parallel([\n      Animated.timing(newAnim.opacity, {\n        toValue: 0,\n        duration: 1500,\n        useNativeDriver: true,\n      }),\n      Animated.timing(newAnim.translateY, {\n        toValue: -100,\n        duration: 1500,\n        useNativeDriver: true,\n      }),\n    ]).start(() => {\n      // Remove this animation from the array once it's done\n      setAnimations(animations => animations.filter(a => a.id !== newAnim.id));\n    });\n  };\n\n  return (\n    <View style={[\n      currentStyles.container,\n      isWeb && currentStyles.webContainer\n    ]}>\n      {/* Prominently displayed eco points at the top */}\n      <View style={[\n        currentStyles.pointsDisplay,\n        isWeb && currentStyles.webPointsDisplay\n      ]}>\n        <Text style={[\n          currentStyles.pointsValue,\n          isWeb && currentStyles.webPointsValue\n        ]}>{formatNumber(ecoPoints)}</Text>\n        <Text style={[\n          currentStyles.pointsLabel,\n          isWeb && currentStyles.webPointsLabel\n        ]}>Eco Points</Text>\n      </View>\n\n      {/* Animations for the click effect */}\n      {animations.map(anim => (\n        <Animated.Text\n          key={anim.id}\n          style={[\n            currentStyles.floatingText,\n            {\n              opacity: anim.opacity,\n              transform: [\n                { translateX: anim.position.x },\n                { translateY: anim.translateY },\n              ],\n            },\n          ]}\n        >\n          {anim.value}\n        </Animated.Text>\n      ))}\n\n      {/* Main click button */}\n      <TouchableOpacity\n        style={[\n          currentStyles.clickButton,\n          isWeb && currentStyles.webClickButton\n        ]}\n        onPress={handlePress}\n        activeOpacity={0.7}\n      >\n        <View style={[\n          currentStyles.innerCircle,\n          isWeb && currentStyles.webInnerCircle\n        ]}>\n          <Text style={[\n            currentStyles.buttonText,\n            isWeb && currentStyles.webButtonText\n          ]}>🌍</Text>\n          <Text style={[\n            currentStyles.buttonSubtext,\n            isWeb && currentStyles.webButtonSubtext\n          ]}>Click to help!</Text>\n        </View>\n      </TouchableOpacity>\n\n      {/* Points per second below the earth button */}\n      <View style={[\n        currentStyles.pointsPerSecondContainer,\n        isWeb && currentStyles.webPointsPerSecondContainer\n      ]}>\n        <Text style={[\n          currentStyles.pointsPerSecondValue,\n          isWeb && currentStyles.webPointsPerSecondValue\n        ]}>+{formatNumber(pointsPerSecond)}</Text>\n        <Text style={[\n          currentStyles.pointsPerSecondLabel,\n          isWeb && currentStyles.webPointsPerSecondLabel\n        ]}>points per second</Text>\n      </View>\n\n      {/* Click value indicator */}\n      <Text style={[\n        currentStyles.valueText,\n        isWeb && currentStyles.webValueText\n      ]}>+{clickValue} eco points per click</Text>\n    </View>\n  );\n};\n\n// Convert styles to a function that takes isWeb as a parameter and calculates webScale internally\nconst styles = (isWeb) => {\n  const webScale = isWeb ? 1.5 : 1;\n\n  return StyleSheet.create({\n    container: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: 20,\n      paddingTop: 30, // Increased top padding to create more space from header\n      position: 'relative',\n      height: 340, // Slightly increased height to accommodate bigger elements\n      backgroundColor: '#E8F5E9',\n      borderRadius: 15,\n      marginVertical: 15, // Increased vertical margin\n      marginTop: 20, // Extra margin at the top\n    },\n    webContainer: {\n      width: '80%',\n      maxWidth: 600,\n      height: 'auto',\n      minHeight: 340,\n      marginHorizontal: 'auto',\n    },\n    pointsDisplay: {\n      alignItems: 'center',\n      marginBottom: 25, // Increased bottom margin\n      backgroundColor: '#4CAF50',\n      paddingVertical: 14, // More vertical padding\n      paddingHorizontal: 35, // More horizontal padding\n      borderRadius: 30,\n      shadowColor: '#000',\n      shadowOffset: { width: 0, height: 4 }, // Stronger shadow\n      shadowOpacity: 0.35, // More opaque shadow\n      shadowRadius: 7, // Larger shadow radius\n      elevation: 10, // Higher elevation for Android\n      borderWidth: 2, // Add border\n      borderColor: '#388E3C', // Border color\n    },\n    webPointsDisplay: {\n      width: '100%',\n      maxWidth: 500,\n    },\n    pointsValue: {\n      fontSize: 38, // Larger font size\n      fontWeight: 'bold',\n      color: 'white',\n      textShadowColor: 'rgba(0, 0, 0, 0.2)', // Add text shadow\n      textShadowOffset: { width: 1, height: 1 },\n      textShadowRadius: 3,\n    },\n    webPointsValue: {\n      fontSize: 38 * webScale,\n    },\n    pointsLabel: {\n      fontSize: 16, // Larger label font\n      color: '#E8F5E9',\n      fontWeight: '600', // Slightly bolder\n      marginTop: 2, // Small space between value and label\n    },\n    webPointsLabel: {\n      fontSize: 16 * webScale,\n    },\n    clickButton: {\n      width: 150,\n      height: 150,\n      borderRadius: 75,\n      backgroundColor: '#4CAF50',\n      justifyContent: 'center',\n      alignItems: 'center',\n      shadowColor: '#000',\n      shadowOffset: { width: 0, height: 4 },\n      shadowOpacity: 0.3,\n      shadowRadius: 5,\n      elevation: 8,\n    },\n    webClickButton: {\n      width: 150 * webScale,\n      height: 150 * webScale,\n      borderRadius: 75 * webScale,\n    },\n    innerCircle: {\n      width: 130,\n      height: 130,\n      borderRadius: 65,\n      backgroundColor: '#81C784',\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderWidth: 3,\n      borderColor: '#388E3C',\n    },\n    webInnerCircle: {\n      width: 130 * webScale,\n      height: 130 * webScale,\n      borderRadius: 65 * webScale,\n    },\n    buttonText: {\n      fontSize: 48,\n      marginBottom: 5,\n    },\n    webButtonText: {\n      fontSize: 48 * webScale,\n    },\n    buttonSubtext: {\n      fontSize: 12,\n      color: '#1B5E20',\n      fontWeight: 'bold',\n    },\n    webButtonSubtext: {\n      fontSize: 12 * webScale,\n    },\n    floatingText: {\n      position: 'absolute',\n      zIndex : 1,\n      fontSize: 30,\n      fontWeight: 'bold',\n      color: '#2f8032',\n    },\n    pointsPerSecondContainer: {\n      marginTop: 15,\n      alignItems: 'center',\n      backgroundColor: '#81C784',\n      paddingVertical: 6,\n      paddingHorizontal: 15,\n      borderRadius: 15,\n    },\n    webPointsPerSecondContainer: {\n      width: '100%',\n      maxWidth: 500,\n    },\n    pointsPerSecondValue: {\n      fontSize: 18,\n      fontWeight: 'bold',\n      color: 'white',\n    },\n    webPointsPerSecondValue: {\n      fontSize: 18 * webScale,\n    },\n    pointsPerSecondLabel: {\n      fontSize: 12,\n      color: '#E8F5E9',\n    },\n    webPointsPerSecondLabel: {\n      fontSize: 12 * webScale,\n    },\n    valueText: {\n      marginTop: 10,\n      fontSize: 16,\n      color: '#1B5E20',\n      fontWeight: '500',\n    },\n    webValueText: {\n      fontSize: 16 * webScale,\n    },\n  });\n};\n\nexport default ClickArea;","import React from 'react';\nimport { View, Text, ScrollView, TouchableOpacity, StyleSheet } from 'react-native';\n\nconst Buildings = ({ buildings, ecoPoints, onPurchase, prestigeBuilding, checkCanPrestige, getPrestigeBonus, getBuildingCost }) => {\n  // Filter buildings to only show unlocked ones\n  const availableBuildings = buildings.filter(building => building.unlocked);\n\n  // Render a single building item\n  const renderBuildingItem = (building) => {\n    // Use the getBuildingCost function provided via props\n    const cost = getBuildingCost(building.id);\n    const canAfford = ecoPoints >= cost;\n    const maxLevel = building.level >= building.maxLevel;\n    const canPrestige = checkCanPrestige && checkCanPrestige(building.id);\n    const prestigeBonus = building.prestigeLevel > 0 ? (building.prestigeLevel * (building.prestigeBonus || 0) * 100).toFixed(0) : 0;\n    \n    return (\n      <TouchableOpacity\n        key={building.id}\n        style={[\n          styles.buildingItem,\n          maxLevel ? styles.maxedBuilding : \n            canAfford ? styles.affordableBuilding : styles.unaffordableBuilding\n        ]}\n        onPress={() => canPrestige ? prestigeBuilding(building.id) : onPurchase(building.id)}\n        disabled={!canAfford && !canPrestige}\n      >\n        <View style={styles.buildingIcon}>\n          <Text style={styles.iconText}>{building.icon}</Text>\n        </View>\n        \n        <View style={styles.buildingInfo}>\n          <View style={styles.buildingHeader}>\n            <Text style={styles.buildingName}>{building.name}</Text>\n            <Text style={styles.buildingLevel}>\n              Lvl {building.level}/{building.maxLevel}\n              {building.prestigeLevel > 0 && <Text style={styles.prestigeLevel}> 🌟{building.prestigeLevel}</Text>}\n            </Text>\n          </View>\n          \n          <Text style={styles.buildingDescription}>{building.description}</Text>\n          \n          {building.prestigeLevel > 0 && (\n            <Text style={styles.prestigeBonus}>Current prestige bonus: +{prestigeBonus}%</Text>\n          )}\n          \n          {canPrestige ? (\n            <View style={styles.prestigeContainer}>\n              <Text style={styles.prestigeText}>\n                Prestige now for +{(building.prestigeBonus * 100).toFixed(0)}% permanent bonus!\n              </Text>\n              <TouchableOpacity \n                style={styles.prestigeButton}\n                onPress={() => prestigeBuilding(building.id)}\n              >\n                <Text style={styles.prestigeButtonText}>PRESTIGE 🌟</Text>\n              </TouchableOpacity>\n            </View>\n          ) : (\n            <View style={styles.buildingFooter}>\n              <Text style={[\n                styles.costText,\n                maxLevel ? styles.maxedText : \n                  canAfford ? styles.affordableText : styles.unaffordableText\n              ]}>\n                {maxLevel ? 'MAX LEVEL' : `Cost: ${cost} eco points`}\n              </Text>\n              \n              {building.type === 'passive' && (\n                <Text style={styles.effectText}>\n                  +{(building.baseEffect * (building.level + 1) * (1 + (building.prestigeLevel * building.prestigeBonus || 0))).toFixed(1)} pts/sec\n                </Text>\n              )}\n              \n              {building.type === 'click' && (\n                <Text style={styles.effectText}>\n                  +{(building.baseEffect * (building.level + 1) * (1 + (building.prestigeLevel * building.prestigeBonus || 0))).toFixed(1)} per click\n                </Text>\n              )}\n              \n              {building.type === 'multiplier' && (\n                <Text style={styles.effectText}>\n                  +{(building.baseEffect * (building.level + 1) * (1 + (building.prestigeLevel * building.prestigeBonus || 0)) * 100).toFixed(1)}% bonus\n                </Text>\n              )}\n            </View>\n          )}\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Buildings</Text>\n      \n      {availableBuildings.length === 0 ? (\n        <View style={styles.emptyContainer}>\n          <Text style={styles.emptyText}>No buildings available yet! Keep clicking to unlock more.</Text>\n        </View>\n      ) : (\n        <ScrollView style={styles.buildingsList}>\n          {availableBuildings.map(renderBuildingItem)}\n        </ScrollView>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: '#E8F5E9',\n    borderRadius: 10,\n    marginVertical: 10,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#2E7D32',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  buildingsList: {\n    flex: 1,\n  },\n  buildingItem: {\n    flexDirection: 'row',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 10,\n    alignItems: 'center',\n  },\n  affordableBuilding: {\n    backgroundColor: '#C8E6C9',\n    borderWidth: 1,\n    borderColor: '#43A047',\n  },\n  unaffordableBuilding: {\n    backgroundColor: '#DCEDC8',\n    borderWidth: 1,\n    borderColor: '#AED581',\n    opacity: 0.8,\n  },\n  maxedBuilding: {\n    backgroundColor: '#B3E5FC',\n    borderWidth: 1,\n    borderColor: '#29B6F6',\n  },\n  buildingIcon: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: '#FFFFFF',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 3,\n  },\n  iconText: {\n    fontSize: 24,\n  },\n  buildingInfo: {\n    flex: 1,\n  },\n  buildingHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 4,\n  },\n  buildingName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#1B5E20',\n  },\n  buildingLevel: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: '#388E3C',\n  },\n  prestigeLevel: {\n    color: '#FF6F00',\n    fontWeight: 'bold',\n  },\n  buildingDescription: {\n    fontSize: 14,\n    color: '#33691E',\n    marginBottom: 6,\n  },\n  prestigeBonus: {\n    fontSize: 12,\n    color: '#FF6F00',\n    fontWeight: 'bold',\n    marginBottom: 6,\n  },\n  buildingFooter: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  costText: {\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n  affordableText: {\n    color: '#2E7D32',\n  },\n  unaffordableText: {\n    color: '#BF360C',\n  },\n  maxedText: {\n    color: '#0288D1',\n  },\n  effectText: {\n    fontSize: 13,\n    color: '#33691E',\n    fontStyle: 'italic',\n  },\n  emptyContainer: {\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#689F38',\n    textAlign: 'center',\n  },\n  prestigeContainer: {\n    marginTop: 5,\n    backgroundColor: '#FFF3E0',\n    padding: 8,\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: '#FFB74D',\n  },\n  prestigeText: {\n    fontSize: 13,\n    color: '#E65100',\n    marginBottom: 5,\n    textAlign: 'center',\n  },\n  prestigeButton: {\n    backgroundColor: '#FF9800',\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    borderRadius: 4,\n    alignSelf: 'center',\n  },\n  prestigeButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 14,\n  },\n});\n\nexport default Buildings;","import React from 'react';\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\n\nconst Stats = ({ stats, resources, pointsPerSecond, achievements }) => {\n  // Filter to only show unlocked achievements\n  const unlockedAchievements = achievements.filter(achievement => achievement.unlocked);\n  const lockedAchievements = achievements.filter(achievement => !achievement.unlocked);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Stats & Achievements</Text>\n      \n      <View style={styles.statsContainer}>\n        <View style={styles.statItem}>\n          <Text style={styles.statValue}>{Math.floor(resources.ecoPoints)}</Text>\n          <Text style={styles.statLabel}>Eco Points</Text>\n        </View>\n        \n        <View style={styles.statItem}>\n          <Text style={styles.statValue}>{pointsPerSecond.toFixed(2)}</Text>\n          <Text style={styles.statLabel}>Points/sec</Text>\n        </View>\n        \n        <View style={styles.statItem}>\n          <Text style={styles.statValue}>{stats.totalClicks}</Text>\n          <Text style={styles.statLabel}>Total Clicks</Text>\n        </View>\n        \n        <View style={styles.statItem}>\n          <Text style={styles.statValue}>{Math.floor(stats.totalEcoPoints)}</Text>\n          <Text style={styles.statLabel}>Total Points</Text>\n        </View>\n      </View>\n\n      <View style={styles.divider} />\n      \n      <Text style={styles.sectionTitle}>Environmental Impact</Text>\n      <View style={styles.impactContainer}>\n        <View style={styles.impactItem}>\n          <Text style={styles.impactIcon}>🌳</Text>\n          <View style={styles.impactTextContainer}>\n            <Text style={styles.impactValue}>{stats.treesPlanted.toFixed(2)}</Text>\n            <Text style={styles.impactLabel}>Trees Planted</Text>\n          </View>\n        </View>\n        \n        <View style={styles.impactItem}>\n          <Text style={styles.impactIcon}>💨</Text>\n          <View style={styles.impactTextContainer}>\n            <Text style={styles.impactValue}>{stats.co2Reduced.toFixed(2)} kg</Text>\n            <Text style={styles.impactLabel}>CO2 Reduced</Text>\n          </View>\n        </View>\n      </View>\n      \n      <View style={styles.divider} />\n      \n      <Text style={styles.sectionTitle}>Achievements ({unlockedAchievements.length}/{achievements.length})</Text>\n      \n      <ScrollView style={styles.achievementsContainer}>\n        {unlockedAchievements.map(achievement => (\n          <View key={achievement.id} style={styles.achievementItem}>\n            <Text style={styles.achievementIcon}>{achievement.icon}</Text>\n            <View style={styles.achievementInfo}>\n              <Text style={styles.achievementName}>{achievement.name}</Text>\n              <Text style={styles.achievementDescription}>{achievement.description}</Text>\n            </View>\n          </View>\n        ))}\n        \n        {lockedAchievements.map(achievement => (\n          <View key={achievement.id} style={[styles.achievementItem, styles.lockedAchievement]}>\n            <Text style={styles.achievementIcon}>🔒</Text>\n            <View style={styles.achievementInfo}>\n              <Text style={styles.lockedAchievementName}>???</Text>\n              <Text style={styles.lockedAchievementDescription}>Keep playing to unlock!</Text>\n            </View>\n          </View>\n        ))}\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: '#E8F5E9',\n    borderRadius: 10,\n    marginVertical: 10,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#2E7D32',\n    marginBottom: 15,\n    textAlign: 'center',\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    flexWrap: 'wrap',\n  },\n  statItem: {\n    alignItems: 'center',\n    minWidth: '22%',\n    marginBottom: 10,\n  },\n  statValue: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#1B5E20',\n  },\n  statLabel: {\n    fontSize: 12,\n    color: '#388E3C',\n  },\n  divider: {\n    height: 1,\n    backgroundColor: '#81C784',\n    marginVertical: 10,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#2E7D32',\n    marginVertical: 10,\n  },\n  impactContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 15,\n  },\n  impactItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  impactIcon: {\n    fontSize: 24,\n    marginRight: 8,\n  },\n  impactTextContainer: {\n    alignItems: 'flex-start',\n  },\n  impactValue: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#1B5E20',\n  },\n  impactLabel: {\n    fontSize: 12,\n    color: '#388E3C',\n  },\n  achievementsContainer: {\n    maxHeight: 200,\n  },\n  achievementItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#C8E6C9',\n    borderRadius: 8,\n    padding: 10,\n    marginBottom: 8,\n  },\n  lockedAchievement: {\n    backgroundColor: '#F1F8E9',\n    opacity: 0.6,\n  },\n  achievementIcon: {\n    fontSize: 24,\n    marginRight: 10,\n  },\n  achievementInfo: {\n    flex: 1,\n  },\n  achievementName: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#1B5E20',\n  },\n  achievementDescription: {\n    fontSize: 12,\n    color: '#33691E',\n  },\n  lockedAchievementName: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#689F38',\n  },\n  lockedAchievementDescription: {\n    fontSize: 12,\n    color: '#689F38',\n    fontStyle: 'italic',\n  },\n});\n\nexport default Stats;","import { useState, useEffect } from 'react';\nimport buildingsData from '../data/buildings.json';\nimport achievementsData from '../data/achievements.json';\n\n// Define the initial game state\nconst initialState = {\n  resources: {\n    ecoPoints: 0,\n    carbonOffset: 0,\n    renewableEnergy: 0,\n  },\n  stats: {\n    totalClicks: 0,\n    totalEcoPoints: 0,\n    treesPlanted: 0,\n    co2Reduced: 0,\n    totalPrestiges: 0,\n  },\n  multipliers: {\n    clickMultiplier: 1,\n    passiveMultiplier: 1,\n  },\n  buildings: buildingsData.map(building => ({\n    ...building,\n    level: 0,\n    prestigeLevel: 0,\n  })),\n  achievements: achievementsData.map(achievement => ({\n    ...achievement,\n    unlocked: false,\n  })),\n  notifications: [],\n  settings: {\n    soundEnabled: true,\n    particlesEnabled: true,\n  },\n  lastSaved: null,\n};\n\n// Calculate building cost based on base cost, current level, and prestige level\nconst calculateBuildingCost = (baseCost, level, prestigeLevel) => {\n  // Increase base cost by 50% for each prestige level\n  const prestigedBaseCost = baseCost * Math.pow(1.5, prestigeLevel);\n  return Math.floor(prestigedBaseCost * Math.pow(1.15, level));\n};\n\n// Calculate the total points per second from passive buildings\nconst calculatePointsPerSecond = (buildings, multipliers) => {\n  return buildings\n    .filter(building => building.type === 'passive' && building.level > 0)\n    .reduce((sum, building) => {\n      // Include prestige bonus in calculation\n      const prestigeBonus = 1 + (building.prestigeLevel * building.prestigeBonus || 0);\n      return sum + (building.baseEffect * building.level * prestigeBonus);\n    }, 0) * multipliers.passiveMultiplier;\n};\n\n// Calculate the click value based on buildings\nconst calculateClickValue = (buildings, multipliers) => {\n  const baseClick = 1;\n  const clickBonus = buildings\n    .filter(building => building.type === 'click' && building.level > 0)\n    .reduce((sum, building) => {\n      // Include prestige bonus in calculation\n      const prestigeBonus = 1 + (building.prestigeLevel * building.prestigeBonus || 0);\n      return sum + (building.baseEffect * building.level * prestigeBonus);\n    }, 0);\n  \n  return (baseClick + clickBonus) * multipliers.clickMultiplier;\n};\n\n// Check if an achievement should be unlocked\nconst checkAchievementCondition = (achievement, gameState) => {\n  switch (achievement.conditionType) {\n    case 'totalClicks':\n      return gameState.stats.totalClicks >= achievement.conditionValue;\n    case 'totalEcoPoints':\n      return gameState.stats.totalEcoPoints >= achievement.conditionValue;\n    case 'totalBuildings':\n      const totalBuildings = gameState.buildings.reduce((sum, building) => sum + building.level, 0);\n      return totalBuildings >= achievement.conditionValue;\n    case 'totalPrestiges':\n      return gameState.stats.totalPrestiges >= achievement.conditionValue;\n    default:\n      return false;\n  }\n};\n\nconst useGameState = () => {\n  const [gameState, setGameState] = useState(() => {\n    // Try to load the game state from localStorage\n    const savedState = localStorage.getItem('ecoClickerSave');\n    if (savedState) {\n      try {\n        const parsedState = JSON.parse(savedState);\n        \n        // Add any missing fields from the initial state (for compatibility)\n        const updatedState = {\n          ...initialState,\n          ...parsedState,\n          stats: {\n            ...initialState.stats,\n            ...parsedState.stats,\n            totalPrestiges: parsedState.stats.totalPrestiges || 0,\n          },\n          buildings: initialState.buildings.map(initialBuilding => {\n            const savedBuilding = parsedState.buildings.find(b => b.id === initialBuilding.id);\n            if (savedBuilding) {\n              return {\n                ...initialBuilding,\n                level: savedBuilding.level || 0,\n                unlocked: savedBuilding.unlocked !== undefined ? savedBuilding.unlocked : initialBuilding.unlocked,\n                prestigeLevel: savedBuilding.prestigeLevel || 0,\n              };\n            }\n            return initialBuilding;\n          }),\n          achievements: initialState.achievements.map(initialAchievement => {\n            const savedAchievement = parsedState.achievements.find(a => a.id === initialAchievement.id);\n            if (savedAchievement) {\n              return {\n                ...initialAchievement,\n                unlocked: savedAchievement.unlocked || false,\n              };\n            }\n            return initialAchievement;\n          }),\n          notifications: [], // Always start with empty notifications\n        };\n        \n        return updatedState;\n      } catch (error) {\n        console.error('Failed to parse saved game state:', error);\n        // Delete corrupted save data\n        localStorage.removeItem('ecoClickerSave');\n        return initialState;\n      }\n    }\n    return initialState;\n  });\n\n  // Save game state to localStorage whenever it changes\n  useEffect(() => {\n    const saveGame = () => {\n      const stateToSave = {\n        ...gameState,\n        lastSaved: new Date().toISOString(),\n      };\n      localStorage.setItem('ecoClickerSave', JSON.stringify(stateToSave));\n    };\n\n    // Save every 30 seconds\n    const saveInterval = setInterval(saveGame, 30000);\n    \n    // Save when the component unmounts\n    return () => {\n      clearInterval(saveInterval);\n      saveGame();\n    };\n  }, [gameState]);\n\n  // Passive income effect - runs every second\n  useEffect(() => {\n    const pointsPerSecond = calculatePointsPerSecond(gameState.buildings, gameState.multipliers);\n    \n    if (pointsPerSecond > 0) {\n      const timer = setInterval(() => {\n        setGameState(prevState => {\n          // Find the tree plantation building\n          const treePlantation = prevState.buildings.find(b => b.id === 'tree_plantation');\n          \n          // Calculate points generated by tree plantation only, with prestige bonus\n          let treePlantationPoints = 0;\n          if (treePlantation && treePlantation.level > 0) {\n            const prestigeBonus = 1 + (treePlantation.prestigeLevel * treePlantation.prestigeBonus || 0);\n            treePlantationPoints = treePlantation.baseEffect * treePlantation.level * prestigeBonus * prevState.multipliers.passiveMultiplier;\n          }\n          \n          // Plant 1 tree per 50 points generated by the tree plantation\n          const treesToPlant = treePlantationPoints * (1/50);\n          \n          // CO2 reduction is still based on all eco points (0.05kg per point)\n          const co2ToReduce = pointsPerSecond * 0.05;\n          \n          return {\n            ...prevState,\n            resources: {\n              ...prevState.resources,\n              ecoPoints: prevState.resources.ecoPoints + pointsPerSecond,\n            },\n            stats: {\n              ...prevState.stats,\n              totalEcoPoints: prevState.stats.totalEcoPoints + pointsPerSecond,\n              treesPlanted: prevState.stats.treesPlanted + treesToPlant,\n              co2Reduced: prevState.stats.co2Reduced + co2ToReduce,\n            },\n          };\n        });\n      }, 1000);\n      \n      return () => clearInterval(timer);\n    }\n  }, [gameState.buildings, gameState.multipliers]);\n\n  // Notification management - auto-remove after 5 seconds\n  useEffect(() => {\n    if (gameState.notifications.length > 0) {\n      const timer = setTimeout(() => {\n        setGameState(prevState => ({\n          ...prevState,\n          notifications: prevState.notifications.slice(1), // Remove the oldest notification\n        }));\n      }, 5000);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [gameState.notifications]);\n\n  // Check for newly unlocked buildings and achievements\n  useEffect(() => {\n    let hasChanges = false;\n    const newState = { ...gameState };\n    const newNotifications = [...gameState.notifications];\n\n    // Check for buildings to unlock\n    newState.buildings = gameState.buildings.map(building => {\n      if (!building.unlocked && building.unlockAt && gameState.resources.ecoPoints >= building.unlockAt) {\n        hasChanges = true;\n        // Add notification for unlocked building\n        newNotifications.push({\n          id: `building-${building.id}`,\n          type: 'building',\n          title: 'New Building Unlocked!',\n          message: `${building.name} (${building.icon}) is now available for purchase!`,\n          icon: building.icon,\n        });\n        return { ...building, unlocked: true };\n      }\n      return building;\n    });\n\n    // Check for achievements to unlock\n    newState.achievements = gameState.achievements.map(achievement => {\n      if (!achievement.unlocked && checkAchievementCondition(achievement, gameState)) {\n        hasChanges = true;\n        // Add notification for unlocked achievement\n        newNotifications.push({\n          id: `achievement-${achievement.id}`,\n          type: 'achievement',\n          title: 'Achievement Unlocked!',\n          message: `${achievement.name}: ${achievement.description}`,\n          condition: achievement.conditionText,\n          icon: achievement.icon,\n        });\n        return { ...achievement, unlocked: true };\n      }\n      return achievement;\n    });\n\n    if (hasChanges) {\n      setGameState({\n        ...newState,\n        notifications: newNotifications,\n      });\n    }\n  }, [gameState.resources, gameState.stats, gameState.buildings]);\n\n  // Handle clicking on the main clicker area\n  const handleClick = () => {\n    const clickValue = calculateClickValue(gameState.buildings, gameState.multipliers);\n    \n    // CO2 reduction is still based on all eco points (0.05kg per point)\n    const co2ToReduce = clickValue * 0.05;\n    \n    setGameState(prevState => ({\n      ...prevState,\n      resources: {\n        ...prevState.resources,\n        ecoPoints: prevState.resources.ecoPoints + clickValue,\n      },\n      stats: {\n        ...prevState.stats,\n        totalClicks: prevState.stats.totalClicks + 1,\n        totalEcoPoints: prevState.stats.totalEcoPoints + clickValue,\n        // No trees planted from clicking - only from Tree Plantation building\n        co2Reduced: prevState.stats.co2Reduced + co2ToReduce,\n      },\n    }));\n  };\n\n  // Handle purchasing a building\n  const purchaseBuilding = (buildingId) => {\n    const buildingIndex = gameState.buildings.findIndex(b => b.id === buildingId);\n    \n    if (buildingIndex === -1) return false;\n    \n    const building = gameState.buildings[buildingIndex];\n    \n    // Check if we can purchase this building\n    if (building.level >= building.maxLevel) return false;\n    \n    // Use the updated cost calculation that includes prestige level\n    const cost = calculateBuildingCost(building.baseCost, building.level, building.prestigeLevel);\n    \n    if (gameState.resources.ecoPoints < cost) return false;\n    \n    const newBuildings = [...gameState.buildings];\n    newBuildings[buildingIndex] = {\n      ...building,\n      level: building.level + 1,\n    };\n    \n    // Update multipliers if it's a multiplier building\n    let newMultipliers = { ...gameState.multipliers };\n    if (building.type === 'multiplier') {\n      const prestigeBonus = 1 + (building.prestigeLevel * building.prestigeBonus || 0);\n      const effectValue = building.baseEffect * prestigeBonus;\n      \n      newMultipliers = {\n        clickMultiplier: gameState.multipliers.clickMultiplier + effectValue,\n        passiveMultiplier: gameState.multipliers.passiveMultiplier + effectValue,\n      };\n    }\n    \n    setGameState(prevState => ({\n      ...prevState,\n      resources: {\n        ...prevState.resources,\n        ecoPoints: prevState.resources.ecoPoints - cost,\n      },\n      buildings: newBuildings,\n      multipliers: newMultipliers,\n    }));\n    \n    return true;\n  };\n\n  // Handle prestiging a building\n  const prestigeBuilding = (buildingId) => {\n    const buildingIndex = gameState.buildings.findIndex(b => b.id === buildingId);\n    \n    if (buildingIndex === -1) return false;\n    \n    const building = gameState.buildings[buildingIndex];\n    \n    // Can only prestige if building is at max level\n    if (building.level < building.maxLevel) return false;\n    \n    const newBuildings = [...gameState.buildings];\n    newBuildings[buildingIndex] = {\n      ...building,\n      level: 0, // Reset level\n      prestigeLevel: building.prestigeLevel + 1, // Increase prestige level\n    };\n    \n    // Reset multipliers if it's a multiplier building\n    let newMultipliers = { ...gameState.multipliers };\n    if (building.type === 'multiplier') {\n      // Remove old effect and add new effect with prestige bonus\n      const oldEffect = building.baseEffect * building.level;\n      const newPrestigeBonus = 1 + ((building.prestigeLevel + 1) * building.prestigeBonus);\n      \n      newMultipliers = {\n        clickMultiplier: gameState.multipliers.clickMultiplier - oldEffect,\n        passiveMultiplier: gameState.multipliers.passiveMultiplier - oldEffect,\n      };\n    }\n    \n    // Add notification for prestige\n    const newNotifications = [...gameState.notifications];\n    newNotifications.push({\n      id: `prestige-${building.id}-${Date.now()}`,\n      type: 'prestige',\n      title: 'Building Prestiged!',\n      message: `${building.name} has been prestiged to level ${building.prestigeLevel + 1}!`,\n      icon: '🌟',\n    });\n    \n    setGameState(prevState => ({\n      ...prevState,\n      buildings: newBuildings,\n      multipliers: newMultipliers,\n      stats: {\n        ...prevState.stats,\n        totalPrestiges: prevState.stats.totalPrestiges + 1,\n      },\n      notifications: newNotifications,\n    }));\n    \n    return true;\n  };\n\n  // Reset the game\n  const resetGame = () => {\n    if (window.confirm('Are you sure you want to reset your progress? This cannot be undone.')) {\n      localStorage.removeItem('ecoClickerSave');\n      setGameState(initialState);\n    }\n  };\n\n  return {\n    gameState,\n    handleClick,\n    purchaseBuilding,\n    prestigeBuilding,\n    resetGame,\n    pointsPerSecond: calculatePointsPerSecond(gameState.buildings, gameState.multipliers),\n    clickValue: calculateClickValue(gameState.buildings, gameState.multipliers),\n    getBuildingCost: (buildingId) => {\n      const building = gameState.buildings.find(b => b.id === buildingId);\n      if (!building) return null;\n      return calculateBuildingCost(building.baseCost, building.level, building.prestigeLevel);\n    },\n    checkCanPrestige: (buildingId) => {\n      const building = gameState.buildings.find(b => b.id === buildingId);\n      if (!building) return false;\n      return building.level >= building.maxLevel;\n    },\n    getPrestigeBonus: (buildingId) => {\n      const building = gameState.buildings.find(b => b.id === buildingId);\n      if (!building) return null;\n      return building.prestigeBonus || 0;\n    }\n  };\n};\n\nexport default useGameState;","import React, { useState } from 'react';\nimport { \n  StyleSheet, \n  View, \n  Text, \n  SafeAreaView, \n  ScrollView, \n  StatusBar,\n  TouchableOpacity,\n  Modal,\n  Animated,\n  FlatList\n} from 'react-native';\n\n// Import components\nimport ClickArea from './components/ClickArea';\nimport Buildings from './components/Buildings';\nimport Stats from './components/Stats';\n\n// Import game state hook\nimport useGameState from './hooks/useGameState';\n\nconst App = () => {\n  const {\n    gameState,\n    handleClick,\n    purchaseBuilding,\n    prestigeBuilding,\n    resetGame,\n    pointsPerSecond,\n    clickValue,\n    getBuildingCost,\n    checkCanPrestige,\n    getPrestigeBonus\n  } = useGameState();\n\n  const [activeTab, setActiveTab] = useState('buildings');\n  const [infoModalVisible, setInfoModalVisible] = useState(false);\n\n  // Function to format large numbers with K, M, B suffixes\n  const formatNumber = (num) => {\n    if (num < 1000) return Math.floor(num).toString();\n    if (num < 1000000) return (Math.floor(num / 100) / 10).toFixed(1) + 'K';\n    if (num < 1000000000) return (Math.floor(num / 100000) / 10).toFixed(1) + 'M';\n    return (Math.floor(num / 100000000) / 10).toFixed(1) + 'B';\n  };\n\n  // Notification component\n  const NotificationSystem = () => {\n    if (gameState.notifications.length === 0) return null;\n    \n    const renderNotification = ({ item }) => {\n      let bgColor = '#4CAF50'; // default green\n      let iconColor = '#E8F5E9';\n      \n      // Different styles for different notification types\n      if (item.type === 'achievement') {\n        bgColor = '#FFC107'; // amber\n        iconColor = '#FFF9C4';\n      } else if (item.type === 'prestige') {\n        bgColor = '#FF9800'; // orange\n        iconColor = '#FFF3E0';\n      }\n      \n      return (\n        <Animated.View style={[styles.notification, { backgroundColor: bgColor }]}>\n          <View style={[styles.notificationIconContainer, { backgroundColor: iconColor }]}>\n            <Text style={styles.notificationIcon}>{item.icon}</Text>\n          </View>\n          <View style={styles.notificationContent}>\n            <Text style={styles.notificationTitle}>{item.title}</Text>\n            <Text style={styles.notificationMessage}>{item.message}</Text>\n            {item.condition && (\n              <Text style={styles.notificationCondition}>\n                Condition: {item.condition}\n              </Text>\n            )}\n          </View>\n        </Animated.View>\n      );\n    };\n    \n    return (\n      <View style={styles.notificationsContainer}>\n        <FlatList\n          data={gameState.notifications}\n          renderItem={renderNotification}\n          keyExtractor={(item) => item.id}\n          contentContainerStyle={styles.notificationsList}\n        />\n      </View>\n    );\n  };\n\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 'buildings':\n        return (\n          <Buildings\n            buildings={gameState.buildings}\n            ecoPoints={gameState.resources.ecoPoints}\n            onPurchase={purchaseBuilding}\n            prestigeBuilding={prestigeBuilding}\n            checkCanPrestige={checkCanPrestige}\n            getPrestigeBonus={getPrestigeBonus}\n            getBuildingCost={getBuildingCost}\n          />\n        );\n      case 'stats':\n        return (\n          <Stats\n            stats={gameState.stats}\n            resources={gameState.resources}\n            pointsPerSecond={pointsPerSecond}\n            achievements={gameState.achievements}\n          />\n        );\n      default:\n        return <Buildings />;\n    }\n  };\n\n  // Information modal with game explanation and ecological facts\n  const InfoModal = () => (\n    <Modal\n      animationType=\"slide\"\n      transparent={true}\n      visible={infoModalVisible}\n      onRequestClose={() => setInfoModalVisible(false)}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>About EcoClicker</Text>\n          \n          <ScrollView style={styles.modalScrollView}>\n            <Text style={styles.sectionTitle}>How to Play</Text>\n            <Text style={styles.modalText}>\n              Click the Earth to generate eco points. Use your points to purchase buildings that \n              will help you generate more points automatically or increase your click value.\n            </Text>\n            \n            <Text style={styles.sectionTitle}>Ecological Impact</Text>\n            <Text style={styles.modalText}>\n              While EcoClicker is just a game, it aims to raise awareness about ecological issues. \n              Each building represents real-world actions we can take to help our planet.\n            </Text>\n            \n            <Text style={styles.sectionTitle}>Eco Facts</Text>\n            <View style={styles.factContainer}>\n              <Text style={styles.factTitle}>🌳 Trees</Text>\n              <Text style={styles.factText}>\n                A single mature tree can absorb up to 48 pounds of carbon dioxide per year.\n              </Text>\n            </View>\n            \n            <View style={styles.factContainer}>\n              <Text style={styles.factTitle}>☀️ Solar Energy</Text>\n              <Text style={styles.factText}>\n                The sunlight that hits the Earth's surface in just one hour could power the entire world for a year.\n              </Text>\n            </View>\n            \n            <View style={styles.factContainer}>\n              <Text style={styles.factTitle}>♻️ Recycling</Text>\n              <Text style={styles.factText}>\n                Recycling one aluminum can saves enough energy to run a TV for three hours.\n              </Text>\n            </View>\n            \n            <View style={styles.factContainer}>\n              <Text style={styles.factTitle}>🌬️ Wind Energy</Text>\n              <Text style={styles.factText}>\n                Wind turbines can reduce carbon dioxide emissions by 2,000 tons per year compared to fossil fuels.\n              </Text>\n            </View>\n          </ScrollView>\n          \n          <TouchableOpacity\n            style={styles.closeButton}\n            onPress={() => setInfoModalVisible(false)}\n          >\n            <Text style={styles.closeButtonText}>Close</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n\n  return (\n    <SafeAreaView style={styles.safeArea}>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"#E8F5E9\" />\n      \n      <View style={styles.header}>\n        <Text style={styles.title}>EcoClicker</Text>\n        <TouchableOpacity onPress={() => setInfoModalVisible(true)}>\n          <Text style={styles.infoButton}>ℹ️</Text>\n        </TouchableOpacity>\n      </View>\n      \n      <NotificationSystem />\n      \n      <ClickArea \n        onPress={handleClick} \n        clickValue={clickValue} \n        ecoPoints={gameState.resources.ecoPoints}\n        pointsPerSecond={pointsPerSecond}\n        formatNumber={formatNumber}\n      />\n      \n      <View style={styles.tabBar}>\n        <TouchableOpacity\n          style={[styles.tab, activeTab === 'buildings' && styles.activeTab]}\n          onPress={() => setActiveTab('buildings')}\n        >\n          <Text style={[styles.tabText, activeTab === 'buildings' && styles.activeTabText]}>Buildings</Text>\n        </TouchableOpacity>\n        \n        <TouchableOpacity\n          style={[styles.tab, activeTab === 'stats' && styles.activeTab]}\n          onPress={() => setActiveTab('stats')}\n        >\n          <Text style={[styles.tabText, activeTab === 'stats' && styles.activeTabText]}>Stats</Text>\n        </TouchableOpacity>\n      </View>\n      \n      <View style={styles.contentContainer}>\n        {renderTabContent()}\n      </View>\n      \n      <View style={styles.footer}>\n        <TouchableOpacity style={styles.resetButton} onPress={resetGame}>\n          <Text style={styles.resetButtonText}>Reset Game</Text>\n        </TouchableOpacity>\n      </View>\n      \n      <InfoModal />\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n    backgroundColor: '#F1F8E9',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#4CAF50',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  infoButton: {\n    fontSize: 24,\n  },\n  tabBar: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: '#81C784',\n  },\n  tab: {\n    flex: 1,\n    paddingVertical: 10,\n    alignItems: 'center',\n  },\n  activeTab: {\n    borderBottomWidth: 3,\n    borderBottomColor: '#4CAF50',\n  },\n  tabText: {\n    fontSize: 16,\n    color: '#689F38',\n  },\n  activeTabText: {\n    fontWeight: 'bold',\n    color: '#2E7D32',\n  },\n  contentContainer: {\n    flex: 1,\n    padding: 10,\n  },\n  footer: {\n    padding: 10,\n    alignItems: 'center',\n    borderTopWidth: 1,\n    borderTopColor: '#E0E0E0',\n  },\n  resetButton: {\n    padding: 10,\n  },\n  resetButtonText: {\n    color: '#BF360C',\n    fontSize: 14,\n  },\n  modalOverlay: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    width: '90%',\n    maxHeight: '80%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 20,\n    alignItems: 'center',\n  },\n  modalTitle: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#2E7D32',\n    marginBottom: 15,\n  },\n  modalScrollView: {\n    width: '100%',\n    marginBottom: 15,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#388E3C',\n    marginTop: 15,\n    marginBottom: 8,\n  },\n  modalText: {\n    fontSize: 16,\n    color: '#333',\n    marginBottom: 10,\n    lineHeight: 22,\n  },\n  factContainer: {\n    marginBottom: 15,\n    padding: 10,\n    backgroundColor: '#E8F5E9',\n    borderRadius: 8,\n  },\n  factTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#2E7D32',\n    marginBottom: 5,\n  },\n  factText: {\n    fontSize: 14,\n    color: '#333',\n    lineHeight: 20,\n  },\n  closeButton: {\n    backgroundColor: '#4CAF50',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5,\n  },\n  closeButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  notificationsContainer: {\n    position: 'absolute',\n    top: 70, // Position below the header\n    right: 10, // Changed from left to right\n    zIndex: 1000, // Ensure it's above everything else\n    maxWidth: '80%',\n    maxHeight: 150,\n    position: 'fixed', // Add fixed position to keep it visible when scrolling\n  },\n  notificationsList: {\n    // No horizontal padding needed since we have left margin\n  },\n  notification: {\n    flexDirection: 'row',\n    borderRadius: 8,\n    padding: 10,\n    marginVertical: 5,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.3,\n    shadowRadius: 3,\n    elevation: 4,\n  },\n  notificationIconContainer: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 10,\n  },\n  notificationIcon: {\n    fontSize: 20,\n  },\n  notificationContent: {\n    flex: 1,\n  },\n  notificationTitle: {\n    fontWeight: 'bold',\n    color: 'white',\n    fontSize: 16,\n  },\n  notificationMessage: {\n    color: 'white',\n    fontSize: 14,\n  },\n  notificationCondition: {\n    color: 'rgba(255, 255, 255, 0.8)',\n    fontSize: 12,\n    fontStyle: 'italic',\n    marginTop: 2,\n  },\n});\n\nexport default App;","import { registerRootComponent } from 'expo';\nimport App from './src/App';\n\n// Register the main component\nregisterRootComponent(App);\n\nexport default App;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [644], () => (__webpack_require__(8879)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["styles","isWeb","webScale","StyleSheet","create","container","alignItems","justifyContent","padding","paddingTop","position","height","backgroundColor","borderRadius","marginVertical","marginTop","webContainer","width","maxWidth","minHeight","marginHorizontal","pointsDisplay","marginBottom","paddingVertical","paddingHorizontal","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderWidth","borderColor","webPointsDisplay","pointsValue","fontSize","fontWeight","color","textShadowColor","textShadowOffset","textShadowRadius","webPointsValue","pointsLabel","webPointsLabel","clickButton","webClickButton","innerCircle","webInnerCircle","buttonText","webButtonText","buttonSubtext","webButtonSubtext","floatingText","zIndex","pointsPerSecondContainer","webPointsPerSecondContainer","pointsPerSecondValue","webPointsPerSecondValue","pointsPerSecondLabel","webPointsPerSecondLabel","valueText","webValueText","_ref","onPress","clickValue","ecoPoints","pointsPerSecond","formatNumber","_Dimensions$get","Dimensions","get","currentStyles","_useState","useState","_useState2","_slicedToArray","animations","setAnimations","_useState3","_useState4","nextId","setNextId","_jsxs","View","style","children","_jsx","Text","map","anim","Animated","opacity","transform","translateX","x","translateY","value","id","TouchableOpacity","newAnim","Math","random","y","Value","concat","_toConsumableArray","parallel","timing","toValue","duration","useNativeDriver","start","filter","a","activeOpacity","flex","title","textAlign","buildingsList","buildingItem","flexDirection","affordableBuilding","unaffordableBuilding","maxedBuilding","buildingIcon","marginRight","iconText","buildingInfo","buildingHeader","buildingName","buildingLevel","prestigeLevel","buildingDescription","prestigeBonus","buildingFooter","costText","affordableText","unaffordableText","maxedText","effectText","fontStyle","emptyContainer","emptyText","prestigeContainer","prestigeText","prestigeButton","alignSelf","prestigeButtonText","buildings","onPurchase","prestigeBuilding","checkCanPrestige","getBuildingCost","getPrestigeBonus","availableBuildings","building","unlocked","length","ScrollView","cost","canAfford","maxLevel","level","canPrestige","toFixed","disabled","icon","name","description","type","baseEffect","statsContainer","flexWrap","statItem","minWidth","statValue","statLabel","divider","sectionTitle","impactContainer","impactItem","impactIcon","impactTextContainer","impactValue","impactLabel","achievementsContainer","maxHeight","achievementItem","lockedAchievement","achievementIcon","achievementInfo","achievementName","achievementDescription","lockedAchievementName","lockedAchievementDescription","stats","resources","achievements","unlockedAchievements","achievement","lockedAchievements","floor","totalClicks","totalEcoPoints","treesPlanted","co2Reduced","initialState","carbonOffset","renewableEnergy","totalPrestiges","multipliers","clickMultiplier","passiveMultiplier","buildingsData","_objectSpread","achievementsData","notifications","settings","soundEnabled","particlesEnabled","lastSaved","calculateBuildingCost","baseCost","prestigedBaseCost","pow","calculatePointsPerSecond","reduce","sum","calculateClickValue","savedState","localStorage","getItem","parsedState","JSON","parse","initialBuilding","savedBuilding","find","b","undefined","initialAchievement","savedAchievement","error","console","removeItem","gameState","setGameState","useEffect","saveGame","stateToSave","Date","toISOString","setItem","stringify","saveInterval","setInterval","clearInterval","timer","prevState","treePlantation","treePlantationPoints","treesToPlant","co2ToReduce","setTimeout","slice","clearTimeout","hasChanges","newState","newNotifications","unlockAt","push","message","conditionType","conditionValue","checkAchievementCondition","condition","conditionText","handleClick","purchaseBuilding","buildingId","buildingIndex","findIndex","newBuildings","newMultipliers","effectValue","oldEffect","now","resetGame","window","confirm","safeArea","header","infoButton","tabBar","borderBottomWidth","borderBottomColor","tab","activeTab","tabText","activeTabText","contentContainer","footer","borderTopWidth","borderTopColor","resetButton","resetButtonText","modalOverlay","modalContent","modalTitle","modalScrollView","modalText","lineHeight","factContainer","factTitle","factText","closeButton","closeButtonText","notificationsContainer","top","right","notificationsList","notification","notificationIconContainer","notificationIcon","notificationContent","notificationTitle","notificationMessage","notificationCondition","_useGameState","useGameState","setActiveTab","infoModalVisible","setInfoModalVisible","SafeAreaView","StatusBar","barStyle","FlatList","data","renderItem","item","bgColor","iconColor","keyExtractor","contentContainerStyle","ClickArea","num","toString","Buildings","Stats","renderTabContent","Modal","animationType","transparent","visible","onRequestClose","registerRootComponent","App","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}